% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oxcal.R
\name{oxcal_execute}
\alias{oxcal_execute}
\title{Execute an Oxcal Script}
\usage{
oxcal_execute(
  script,
  file = NULL,
  output = c("js", "log", "txt", "csv"),
  timeout = 0
)
}
\arguments{
\item{script}{A \code{\link{character}} string of instructions for OxCal.}

\item{file}{A \code{\link{character}} string naming a file (without extension) to
write \code{script} to. Output files will be named after \code{file} and written to
the same directory.}

\item{output}{A \code{\link{character}} string specifying the file extension to be
returned (see below). It must be one of "\code{js}", "\code{log}", "\code{txt}" or "\code{csv}".}

\item{timeout}{An \code{\link{integer}} value specifying the timeout in seconds,
ignored if 0. This is a limit for the elapsed time running OxCal.
Fractions of seconds are ignored (see \code{\link[=system2]{system2()}}).}
}
\value{
Invisibly returns the path to the \code{output} file.
}
\description{
Execute an Oxcal Script
}
\note{
Adapted from \code{\link[oxcAAR:executeOxcalScript]{oxcAAR::executeOxcalScript()}}.
}
\examples{
\dontrun{
## Download OxCal
oxcal_setup()

## Calibrate 14C dates
cal <- oxcal_calibrate(
  names = c("X","Y"),
  dates = c(5000, 2500),
  errors = c(25, 50)
)
cal

## Custom script
scr <- 'Plot()
 {
  R_Date("X",5000,25);
  R_Date("Y",2500,50);
 };'
out <- oxcal_execute(scr)
res <- oxcal_parse(out)
res
}
}
\references{
\url{https://c14.arch.ox.ac.uk/oxcalhelp/hlp_analysis_file.html}
}
\seealso{
Other OxCal tools: 
\code{\link{oxcal_calibrate}()},
\code{\link{oxcal_download}()},
\code{\link{oxcal_parse}()},
\code{\link{oxcal_setup}()}
}
\author{
M. Hinz, N. Frerebeau
}
\concept{OxCal tools}
