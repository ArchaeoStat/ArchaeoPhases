[{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to ArchaeoPhases","text":"ArchaeoPhases provides list functions statistical analysis archaeological dates groups dates. based post-processing Markov Chains whose stationary distribution posterior distribution series dates. MCMC output can simulated different applications instance ChronoModel (Lanos et al. 2020), Oxcal (Bronk Ramsey 2009) BCal (Buck, Christen, James 1999). requirement CSV file containing sample posterior distribution.","code":"## Load packages library(ArchaeoPhases) library(coda) # MCMC diagnostic"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"import-data","dir":"Articles","previous_headings":"","what":"Import data","title":"Introduction to ArchaeoPhases","text":"vignette uses data available ArchaeoData package available separate repository. ArchaeoData provides MCMC outputs ChronoModel, OxCal BCal. Let’s use data Ksar Akil generated ChronoModel (Bosch et al. 2015). Two different files generated ChronoModel: Chain_all_Events.csv contains MCMC samples event created modeling, Chain_all_Phases.csv contains MCMC samples minimum maximum group dates least one group created. See vignette(\"import\") details import MCMC samples.","code":"## Install data package install.packages(\"ArchaeoData\", repos = \"https://archaeostat.r-universe.dev\") ## Construct the path to the data chrono_path <- file.path(\"chronomodel\", \"ksarakil\")  ## Read events from ChronoModel output_events <- system.file(chrono_path, \"Chain_all_Events.csv\", package = \"ArchaeoData\") chrono_events <- read_chronomodel_events(output_events)  ## Read phases from ChronoModel output_phases <- system.file(chrono_path, \"Chain_all_Phases.csv\", package = \"ArchaeoData\") chrono_phases <- read_chronomodel_phases(output_phases)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"convergence-of-mcmc-chains","dir":"Articles","previous_headings":"","what":"Convergence of MCMC chains","title":"Introduction to ArchaeoPhases","text":"details diagnostic Markov chain, see Robert Casella (2010). assess agreement posterior distributions numerical approximations, three Markov chains run parallel ChronoModel. chain, 1 000 iterations used Burn-period, 20 batches 500 iterations used Adapt period, 100 000 iterations drawn Acquire period 1 10 kept order break correlation structure. analysis history plot, Markov chains reach equilibrium Acquire period. autocorrelations three Markov chains significant, meaning rate subsample (1 10) enough. Now, using package ArchaeoPhases package coda, can verify whether MCMC samples correctly generated software. Indeed, MCMC samples autocorrelation reached equilibrium (posterior density parameter investigation). plot chunk coda-autocor plot chunk coda-autocor autocorrelation plots show three chains significant. means actually generated non correlated sample, aim MCMC process. can also check whether chains reached equilibrium. example, let’s consider first date dataset. plot chunk coda-plot plot shows three chains corresponding first date reached stationary process. can test Gelman-Rubin criterion. expected value confirm Markov chains reached equilibrium 1. Gelman-Rubin criterion confirms Markov chains reached equilibrium. can also test Geweke criterion. expected value confirm Markov chains reached equilibrium strickly less 1. Geweke criterion criterion confirms Markov chains reached equilibrium. ChronoModel generated correct samples posterior distribution. Now gathering three chains, total 30 000 iterations collected order give estimations posterior distribution parameter.","code":"## Create an mcmc.list coda_events <- as_coda(chrono_events, chains = 3) coda::autocorr.plot(coda_events[[1]]) plot(coda_events[, 1, ], trace = TRUE, density = FALSE) coda::gelman.diag(coda_events) #> Potential scale reduction factors: #>  #>       Point est. Upper C.I. #>  [1,]          1          1 #>  [2,]          1          1 #>  [3,]          1          1 #>  [4,]          1          1 #>  [5,]          1          1 #>  [6,]          1          1 #>  [7,]          1          1 #>  [8,]          1          1 #>  [9,]          1          1 #> [10,]          1          1 #> [11,]          1          1 #> [12,]          1          1 #> [13,]          1          1 #> [14,]          1          1 #> [15,]          1          1 #> [16,]          1          1 #>  #> Multivariate psrf #>  #> 1 coda::geweke.diag(coda_events[, 1, ], frac1 = 0.1, frac2 = 0.5) #> [[1]] #>  #> Fraction in 1st window = 0.1 #> Fraction in 2nd window = 0.5  #>  #>   var1  #> 0.4978  #>  #>  #> [[2]] #>  #> Fraction in 1st window = 0.1 #> Fraction in 2nd window = 0.5  #>  #>   var1  #> 0.7736  #>  #>  #> [[3]] #>  #> Fraction in 1st window = 0.1 #> Fraction in 2nd window = 0.5  #>  #>   var1  #> 0.7666"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"analysis-of-a-series-of-dates","dir":"Articles","previous_headings":"","what":"Analysis of a series of dates","title":"Introduction to ArchaeoPhases","text":"plot chunk event-plot","code":"plot(chrono_events)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"tempo-plot","dir":"Articles","previous_headings":"Analysis of a series of dates","what":"Tempo Plot","title":"Introduction to ArchaeoPhases","text":"tempo plot introduced Dye (2016). See Philippe Vibet (2020) statistical details. tempo plot one way measure change time: estimates cumulative occurrence archaeological events Bayesian calibration. tempo plot yields graphic slope plot directly reflects pace change: period rapid change yields steep slope period slow change yields gentle slope. change, plot horizontal. change instantaneous, plot vertical. plot chunk tempo-plot graphs, can see highest part sampled activity dated -45 000 -35 000 two dates younger, -32 000 -28 000.","code":"## Warning: this may take a few seconds tp <- tempo(chrono_events, level = 0.95, count = FALSE) plot(tp)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"activity-plot","dir":"Articles","previous_headings":"Analysis of a series of dates","what":"Activity Plot","title":"Introduction to ArchaeoPhases","text":"activity plot displays derivative Bayes estimate Tempo plot. way see changes time. plot chunk activity-plot","code":"## Warning: this may take a few seconds ac <- activity(tp) plot(ac)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"occurrence-plot","dir":"Articles","previous_headings":"Analysis of a series of dates","what":"Occurrence Plot","title":"Introduction to ArchaeoPhases","text":"Occurrence plot calculates calendar date tt corresponding smallest date number events observed tt equal kk, k=[(1,16)]k = [(1, 16)]. Occurrence plot draws credible intervals highest posterior density (HPD) region dates associated desired level confidence. plot chunk occurrence-plot","code":"## Warning: this may take a few seconds oc <- occurrence(chrono_events, level = 0.95) plot(oc)"},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"groups-of-dates","dir":"Articles","previous_headings":"Analysis of groups of dates","what":"Groups of dates","title":"Introduction to ArchaeoPhases","text":"group dates (phase) defined date minimum date maximum group. part, use data containing values group dates. can estimate time range group dates shortest interval contains dates group given confidence level (Philippe Vibet 2020). following code gives endpoints time range groups dates Ksar Akil data given confidence level. time range interval group dates way summarize estimation minimum, estimation maximum uncertainties time. plot chunk phases-plot","code":"## Build phases from events p <- list(EPI = 1, UP = 2:4, Ahmarian = 5:15, IUP = 16) chrono_groups <- phases(chrono_events, groups = p)  all(chrono_groups == chrono_phases) #> [1] TRUE bound <- boundaries(chrono_groups, level = 0.95) as.data.frame(bound) #>              start       end duration #> EPI      -28978.53 -26969.82 2009.709 #> UP       -38570.37 -29368.75 9202.620 #> Ahmarian -42168.47 -37433.31 4736.161 #> IUP      -43240.37 -41161.00 2080.371 plot(chrono_groups, level = 0.95)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"succession-of-groups","dir":"Articles","previous_headings":"Analysis of groups of dates","what":"Succession of groups","title":"Introduction to ArchaeoPhases","text":"may also interested succession phases. actually case succession IUP, Ahmarian, EPI stratigraphic order. Hence, can estimate transition interval , exists, gap successive phases.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"transistions-between-successive-groups","dir":"Articles","previous_headings":"Analysis of groups of dates > Succession of groups","what":"Transistions between successive groups","title":"Introduction to ArchaeoPhases","text":"transition interval two successive phases shortest interval covers end oldest group dates start youngest group dates. start end estimated minimum maximum dates included group dates. gives idea transition period two successive group dates. computational point view equivalent time range calculated end oldest group dates start youngest group dates.","code":"trans <- transition(chrono_groups, level = 0.95) as.data.frame(trans) #>                  start       end  duration #> UP-EPI       -31479.79 -26905.04  4575.756 #> Ahmarian-EPI -39138.82 -27122.05 12017.766 #> IUP-EPI      -43487.53 -26866.99 16621.537 #> Ahmarian-UP  -39118.07 -36741.08  2377.983 #> IUP-UP       -43395.89 -36480.26  6916.631 #> IUP-Ahmarian -43212.31 -40733.77  2479.539"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/ArchaeoPhases.html","id":"gap-between-successive-groups","dir":"Articles","previous_headings":"Analysis of groups of dates > Succession of groups","what":"Gap between successive groups","title":"Introduction to ArchaeoPhases","text":"Successive phases may also separated time. Indeed may exist gap . testing procedure check whether gap exists two successive groups dates fixed probability. gap exists, interval covers end one group dates start successive one fixed posterior probability. confidence level 95%, gap succession phases IUP, Ahmarian , exists one 203 years phase phase EPI. plot chunk succession-plot","code":"hia <- hiatus(chrono_groups, level = 0.95) as.data.frame(hia) #>                  start       end   duration #> UP-EPI       -29188.56 -28961.79   227.7663 #> Ahmarian-EPI -37368.33 -28884.37  8484.9583 #> IUP-EPI      -41220.64 -28814.70 12406.9352 #> IUP-UP       -41282.64 -38421.49  2862.1447 plot(chrono_groups[, c(\"UP\", \"EPI\"), ], succession = \"hiatus\", level = 0.95)"},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/allen.html","id":"overview-of-allens-interval-algebra","dir":"Articles","previous_headings":"","what":"Overview of Allen’s Interval Algebra","title":"Allen's Interval Algebra","text":"Allen’s interval algebra identifies 13 basic relations distinct, exhaustive, qualitative (Allen 1983). algebra defined definite intervals whose endpoints single values. can also used indefinite intervals whose endpoints single values. conventional express Allen relation notation indicates two intervals set relations. example, given definite intervals B, precedes B, Allen relation can represented (p)B. Given indefinite intervals C D, C starts D starts ends D ends, Allen relation expresses incomplete information C(pmo)D. Note Allen set (pmo) relation C D superset Allen set (p) relation B. circumstance, two Allen sets related superset/subset, relation indicated superset weaker relation indicated subset stronger. Allen relation thus provides precise vocabulary characterizing state knowledge relation two intervals, regardless whether intervals definite indefinite. often useful visualize basic Allen relations Nökel lattice. Nökel lattice, immediate neighbors relation differ placement single interval end-point. plot chunk basic_relations","code":"## Plot the basic Allen relations par(mar = c(1, 1, 4, 1)) allen_illustrate(\"basic\")"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/allen.html","id":"analytic-inquiry-with-the-algebra","dir":"Articles","previous_headings":"","what":"Analytic Inquiry with the Algebra","title":"Allen's Interval Algebra","text":"Interval algebra carried composition function returns relation two intervals given relations common third interval. implemented , function expects relation one interval common interval relation common interval remaining interval. function also accepts title resulting Nokel lattice. example, composition function deduces interval represented context inferior reference context precedes interval represented context superior reference context. plot chunk analyze_stratigraphy lattice can created convenience function. plot chunk illustrate_stratigraphy","code":"## Plot lattice for two contexts on the same line of a Harris matrix par(mar = c(1, 1, 4, 1)) allen_analyze(   x = \"m\",   y = \"m\",   main = \"Composite relation of two contexts on the same line\" ) ## Illustrate composite relations in a stratigraphic sequence par(mar = c(1, 1, 4, 1)) allen_illustrate(\"sequence\")"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/allen.html","id":"empirical-inquiry-with-the-algebra","dir":"Articles","previous_headings":"","what":"Empirical Inquiry with the Algebra","title":"Allen's Interval Algebra","text":"Empirical inquiry Allen’s interval algebra compares intervals estimated Bayesian calibration age determinations Anglo-Saxon female burials. First, check expected result identity relation comparing interval . plot chunk identity_relation Next compare depositional histories two bead types recovered well-dated Anglo Saxon female burials England. Note Allen relation converse calculated. plot chunk relation_and_converse plot chunk relation_and_converse can useful observe frequency two intervals related according relations Allen set. instance, might interested two beads might trunk branched. can done observing frequency bead type related row(oFD)col bead. following code shows BE1-CylRound better trunk candidate.","code":"## Load the Anglo Saxon burials dataset path <- system.file(\"oxcal\", \"burials.csv\", package = \"ArchaeoData\") burials <- read.table(path, header = TRUE, sep = \",\", dec = \".\",                       check.names = FALSE)  ## Coerce to event burials <- as_events(burials, calendar = CE()) ## Identify the burials with bead BE1-Dghnt be1_dghnt <- c(   \"UB-4503 (Lec148)\", \"UB-4506 (Lec172/2)\", \"UB-6038 (CasD183)\",   \"UB-4512 (EH091)\", \"UB-4501 (Lec014)\", \"UB-4507 (Lec187)\",   \"UB-4502 (Lec138)\", \"UB-4042 (But1674)\", \"SUERC-39100 (ERL G266)\" )  ## Build phases chains <- list(\"BE1-Dghnt\" = be1_dghnt) be1_dghnt_phase <- phases(burials, groups = chains)  ## Plot par(mar = c(1, 1, 4, 1)) allen_observe(be1_dghnt_phase) ## Identify the burials with bead BE1-CylRound be1_cylround <- c(   \"UB-4965 (ApD117)\", \"UB-4735 (Ber022)\", \"UB-4739 (Ber134/1)\",   \"UB-6473 (BuD250)\", \"UB-6476 (BuD339)\", \"UB-4729 (MH068)\",   \"UB-4835 (ApD134)\", \"UB-4708 (EH083)\", \"UB-4733 (MH095)\",   \"UB-4888 (MelSG089)\", \"UB-4963 (SPTip208)\", \"UB-4890 (MelSG075)\",   \"UB-4732 (MH094)\", \"SUERC-51539 (ERL G353)\", \"SUERC-51551 (ERL G193)\" )  ## Build phases chains <- list(\"BE1-Dghnt\" = be1_dghnt, \"BE1-CylRound\" = be1_cylround) be1_phase <- phases(burials, groups = chains)  ## Plot phase par(mar = c(4, 6, 1, 1)) plot(be1_phase) ## Plot relations par(mar = c(1, 1, 4, 1)) allen_observe(be1_phase, converse = TRUE) allen_observe_frequency(be1_phase, set = \"oFD\") #>              BE1-Dghnt BE1-CylRound #> BE1-Dghnt           NA            0 #> BE1-CylRound    0.9962           NA"},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/import.html","id":"chronomodel","dir":"Articles","previous_headings":"","what":"ChronoModel","title":"Import MCMC Samples","text":"Two different files generated ChronoModel: Chain_all_Events.csv contains MCMC samples event created modeling, Chain_all_Phases.csv contains MCMC samples minimum maximum group dates least one group created. plot chunk read-chronomodel-events plot chunk read-chronomodel-phases","code":"## Construct the path to the data path_events <- file.path(\"chronomodel\", \"ksarakil\", \"Chain_all_Events.csv\") output_events <- system.file(path_events, package = \"ArchaeoData\")  ## Read events from ChronoModel chrono_events <- read_chronomodel_events(output_events)  ## Plot events plot(chrono_events) ## Construct the path to the data path_phases <- file.path(\"chronomodel\", \"ksarakil\", \"Chain_all_Phases.csv\") output_phases <- system.file(path_phases, package = \"ArchaeoData\")  ## Read phases from ChronoModel chrono_phases <- read_chronomodel_phases(output_phases)  ## Plot phases plot(chrono_phases)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/import.html","id":"oxcal","dir":"Articles","previous_headings":"","what":"Oxcal","title":"Import MCMC Samples","text":"Oxcal generates CSV file containing MCMC samples parameters (dates, start end phases). plot chunk read-oxcal phase boundaries extracted automatically Oxcal output. Use as_phases() get phase boundaries: plot chunk oxcal-phases","code":"## Construct the path to the data path_oxcal <- file.path(\"oxcal\", \"ksarakil\", \"MCMC_Sample.csv\") output_oxcal <- system.file(path_oxcal, package = \"ArchaeoData\")  ## Read OxCal MCMC samples oxcal_mcmc <- read_oxcal(output_oxcal)  ## Plot events plot(oxcal_mcmc) ## Get phases boundaries from OxCal oxcal_phases <- as_phases(oxcal_mcmc,                           start = c(2, 5, 19, 24),                           stop = c(4, 18, 23, 26),                           names = c(\"IUP\", \"Ahmarian\", \"UP\", \"EPI\"))  ## Plot phase boundaries plot(oxcal_phases)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/articles/import.html","id":"bcal","dir":"Articles","previous_headings":"","what":"BCal","title":"Import MCMC Samples","text":"BCal generates CSV file containing MCMC samples parameters (dates, start end groups). group boundaries extracted automatically BCal output. Use as_phases() get group boundaries: plot chunk bcal-phases","code":"## Construct the path to the data path_bcal <- file.path(\"bcal\", \"fishpond.csv\") output_bcal <- system.file(path_bcal, package = \"ArchaeoData\")  ## Read BCal MCMC samples bcal_mcmc <- read_bcal(output_bcal) ## Get groups boundaries from BCal bcal_phases <- as_phases(   bcal_mcmc,   start = c(6, 9),   stop = c(1, 7),   names = c(\"Layer II\", \"Layer III\") )  ## Plot group boundaries plot(bcal_phases)"},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Post-Processing of Markov Chain Monte Carlo Simulations for Chronological Modelling","text":"Statistical analysis archaeological dates groups dates. ArchaeoPhases allows post-process Markov Chain Monte Carlo (MCMC) simulations ChronoModel (Lanos et al. 2020), Oxcal (Bronk Ramsey 2009) BCal (Buck, Christen, James 1999). package provides functions study rhythms long term posterior distribution series dates (tempo activity plot). also allows estimation visualization time ranges posterior distribution groups dates (e.g. duration, transition hiatus successive phases). ArchaeoPhases v2.0 brings comprehensive package rewrite, resulting renaming nearly functions. information, please refer news(Version >= \"2.0\", package = \"ArchaeoPhases\").","code":"To cite ArchaeoPhases in publications use:    Philippe A, Vibet M (2020). \"Analysis of Archaeological Phases Using   the R Package ArchaeoPhases.\" _Journal of Statistical Software, Code   Snippets_, *93*(1). doi:10.18637/jss.v093.c01   <https://doi.org/10.18637/jss.v093.c01>.    Philippe A, Vibet M, Dye T, Frerebeau N (2023). _ArchaeoPhases:   Post-Processing of Markov Chain Monte Carlo Simulations for   Chronological Modelling_. Université de Nantes, Nantes, France.   doi:10.5281/zenodo.8087121 <https://doi.org/10.5281/zenodo.8087121>,   R package version 2.0,   <https://ArchaeoStat.github.io/ArchaeoPhases/>."},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Post-Processing of Markov Chain Monte Carlo Simulations for Chronological Modelling","text":"can install released version ArchaeoPhases CRAN : development version GitHub : can install 1.x releases CRAN archives:","code":"install.packages(\"ArchaeoPhases\") # install.packages(\"remotes\") remotes::install_github(\"ArchaeoStat/ArchaeoPhases\") # install.packages(\"remotes\") remotes::install_version(\"ArchaeoPhases\", version = \"1.8\")"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Post-Processing of Markov Chain Monte Carlo Simulations for Chronological Modelling","text":"ArchaeoPhases v2.0 uses aion internal date representation. Look vignette(\"aion\", package = \"aion\") start. examples use data available ArchaeoData package available separate repository. ArchaeoData provides MCMC outputs ChronoModel, OxCal BCal. Import CSV file containing sample posterior distribution:","code":"## Install data package install.packages(\"ArchaeoData\", repos = \"https://archaeostat.r-universe.dev\") ## Load package library(ArchaeoPhases) ## Read output from ChronoModel path <- \"chronomodel/ksarakil/\"  ## Events path_event <- system.file(path, \"Chain_all_Events.csv\", package = \"ArchaeoData\") (chrono_events <- read_chronomodel_events(path_event)) #> <EventsMCMC> #> - Number of events: 16 #> - Number of MCMC samples: 30000  ## Phases path_phase <- system.file(path, \"Chain_all_Phases.csv\", package = \"ArchaeoData\") (chrono_phases <- read_chronomodel_phases(path_phase)) #> <PhasesMCMC> #> - Number of phases: 4 #> - Number of MCMC samples: 30000"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/index.html","id":"analysis-of-a-series-of-dates","dir":"","previous_headings":"Usage","what":"Analysis of a series of dates","title":"Post-Processing of Markov Chain Monte Carlo Simulations for Chronological Modelling","text":"","code":"## Plot the first event plot(chrono_events[, 1], interval = \"hdr\")  ## Plot all events plot(chrono_events) ## Tempo plot tp <- tempo(chrono_events, level = 0.95) plot(tp)  ## Activity plot ac <- activity(chrono_events) plot(ac)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/index.html","id":"analysis-of-a-group-of-dates-phase","dir":"","previous_headings":"Usage","what":"Analysis of a group of dates (phase)","title":"Post-Processing of Markov Chain Monte Carlo Simulations for Chronological Modelling","text":"","code":"bound <- boundaries(chrono_phases, level = 0.95) as.data.frame(bound) #>              start       end duration #> EPI      -28978.53 -26969.82 2009.709 #> UP       -38570.37 -29368.75 9202.620 #> Ahmarian -42168.47 -37433.31 4736.161 #> IUP      -43240.37 -41161.00 2080.371 ## Plot all phases plot(chrono_phases) plot(chrono_phases[, c(\"UP\", \"EPI\"), ], succession = \"hiatus\") plot(chrono_phases[, c(\"UP\", \"EPI\"), ], succession = \"transition\")"},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ActivityEvents-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Activity — ActivityEvents-class","title":"Activity — ActivityEvents-class","text":"S4 class store result activity plot.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ActivityEvents-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Activity — ActivityEvents-class","text":"hash character string giving 32-byte MD5 hash original data file.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ActivityEvents-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Activity — ActivityEvents-class","text":"class inherits aion::TimeSeries.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ActivityEvents-class.html","id":"coerce","dir":"Reference","previous_headings":"","what":"Coerce","title":"Activity — ActivityEvents-class","text":"code snippets , x ActivityEvents object. .data.frame(x) Coerces data.frame.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ActivityEvents-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Activity — ActivityEvents-class","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/AgeDepthModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Age-Depth Model — AgeDepthModel-class","title":"Age-Depth Model — AgeDepthModel-class","text":"S4 class represents age-depth model.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/AgeDepthModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Age-Depth Model — AgeDepthModel-class","text":"depth numeric vector giving depth samples. model list local polynomial regressions (see stats::loess()). hash character string giving 32-byte MD5 hash original data file.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/AgeDepthModel-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Age-Depth Model — AgeDepthModel-class","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ArchaeoPhases-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct Functions in ArchaeoPhases — ArchaeoPhases-defunct","title":"Defunct Functions in ArchaeoPhases — ArchaeoPhases-defunct","text":"functions defunct replaced ArchaeoPhases 2.0.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ArchaeoPhases-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defunct Functions in ArchaeoPhases — ArchaeoPhases-defunct","text":"","code":"AgeDepth(...)  CreateMinMaxGroup(...)  CredibleInterval(...)  credible_interval(...)  DatesHiatus(...)  dates_hiatus(...)  estimate_range(...)  MarginalPlot(...)  marginal_plot(...)  MarginalProba(...)  MarginalStatistics(...)  marginal_statistics(...)  multi_marginal_statistics(...)  MultiCredibleInterval(...)  multi_credible_interval(...)  MultiDatesPlot(...)  multi_dates_plot(...)  MultiHPD(...)  multi_hpd(...)  MultiMarginalPlot(...)  multi_marginal_plot(...)  MultiPhasePlot(...)  MultiPhaseTimeRange(...)  MultiPhasesGap(...)  MultiPhasesTransition(...)  MultiSuccessionPlot(...)  OccurrencePlot(...)  occurrence_plot(...)  PhaseDurationPlot(...)  PhasePlot(...)  PhaseStatistics(...)  PhaseTimeRange(...)  PhasesGap(...)  phases_gap(...)  PhasesTransition(...)  SuccessionPlot(...)  TempoActivityPlot(...)  tempo_activity_plot(...)  TempoPlot(...)  tempo_plot(...)  undated_sample(...)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ArchaeoPhases-defunct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defunct Functions in ArchaeoPhases — ArchaeoPhases-defunct","text":"... used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ArchaeoPhases-defunct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defunct Functions in ArchaeoPhases — ArchaeoPhases-defunct","text":"See changelog details: news(Version >= \"2.0\", package = \"ArchaeoPhases\").","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ArchaeoPhases-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated Functions in ArchaeoPhases — ArchaeoPhases-deprecated","title":"Deprecated Functions in ArchaeoPhases — ArchaeoPhases-deprecated","text":"functions still work removed (defunct) next version.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ArchaeoPhases-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ArchaeoPhases: Post-Processing of Markov Chain Monte Carlo Simulations for Chronological Modelling — ArchaeoPhases-package","title":"ArchaeoPhases: Post-Processing of Markov Chain Monte Carlo Simulations for Chronological Modelling — ArchaeoPhases-package","text":"Statistical analysis archaeological dates groups dates. package allows post-process Markov Chain Monte Carlo (MCMC) simulations 'ChronoModel' https://chronomodel.com/, 'Oxcal' https://c14.arch.ox.ac.uk/oxcal.html 'BCal' https://bcal.shef.ac.uk/. provides functions study rhythms long term posterior distribution series dates (tempo activity plot). also allows estimation visualization time ranges posterior distribution groups dates (e.g. duration, transition hiatus successive phases) described Philippe Vibet (2020) doi:10.18637/jss.v093.c01 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ArchaeoPhases-package.html","id":"package-options","dir":"Reference","previous_headings":"","what":"Package options","title":"ArchaeoPhases: Post-Processing of Markov Chain Monte Carlo Simulations for Chronological Modelling — ArchaeoPhases-package","text":"ArchaeoPhases uses following options() configure behaviour: ArchaeoPhases.calendar: aion::TimeScale object (default calendar printing). ArchaeoPhases.grid: numeric value specifying number equally spaced points densities estimated (defaults \\(512\\)). power \\(2\\). ArchaeoPhases.precision: integer indicating number decimal places (defaults \\(0\\)). ArchaeoPhases.progress: logical scalar specifying progress bars displayed (defaults interactive()).","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/ArchaeoPhases-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ArchaeoPhases: Post-Processing of Markov Chain Monte Carlo Simulations for Chronological Modelling — ArchaeoPhases-package","text":"Full list authors contributors (alphabetic order) Package maintainer Anne Philippeanne.philippe@univ-nantes.fr Laboratoire de Mathématiques Jean Leray (UMR 6629) 2, rue de la Houssinière BP 92208 F-44322 Nantes Cedex 3 France","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/CumulativeEvents-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Events — CumulativeEvents-class","title":"Cumulative Events — CumulativeEvents-class","text":"S4 class store result tempo plot.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/CumulativeEvents-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Cumulative Events — CumulativeEvents-class","text":"lower numeric vector giving lower boundaries credibility interval. upper numeric vector giving upper boundaries credibility interval. level length-one numeric vector giving confidence level. gauss logical scalar indicating Gaussian approximation credible interval used. counts logical scalar. events integer scalar giving number events included tempo plot. hash character string giving 32-byte MD5 hash original data file.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/CumulativeEvents-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cumulative Events — CumulativeEvents-class","text":"class inherits aion::TimeSeries.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/CumulativeEvents-class.html","id":"coerce","dir":"Reference","previous_headings":"","what":"Coerce","title":"Cumulative Events — CumulativeEvents-class","text":"code snippets , x CumulativeEvents object. .data.frame(x) Coerces data.frame.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/CumulativeEvents-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cumulative Events — CumulativeEvents-class","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/DurationsMCMC-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC Duration — DurationsMCMC-class","title":"MCMC Duration — DurationsMCMC-class","text":"S4 classes represent output MCMC algorithm.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/DurationsMCMC-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"MCMC Duration — DurationsMCMC-class","text":"class inherits MCMC.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/DurationsMCMC-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MCMC Duration — DurationsMCMC-class","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/EventsMCMC-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC Events — EventsMCMC-class","title":"MCMC Events — EventsMCMC-class","text":"S4 classes represent collection events.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/EventsMCMC-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"MCMC Events — EventsMCMC-class","text":"class inherits MCMC.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/EventsMCMC-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MCMC Events — EventsMCMC-class","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/MCMC-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC — MCMC-class","title":"MCMC — MCMC-class","text":"S4 class represent output MCMC algorithm.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/MCMC-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MCMC — MCMC-class","text":"labels character vector specifying name events. depth numeric vector giving sample depth. hash character string giving 32-byte MD5 hash original data file.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/MCMC-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"MCMC — MCMC-class","text":"class inherits matrix.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/MCMC-class.html","id":"subset","dir":"Reference","previous_headings":"","what":"Subset","title":"MCMC — MCMC-class","text":"code snippets , x MCMC object. x[[]] Extracts single event (one chain) selected subscript . length-one numeric character vector.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/MCMC-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MCMC — MCMC-class","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/OccurrenceEvents-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Occurrence — OccurrenceEvents-class","title":"Occurrence — OccurrenceEvents-class","text":"S4 class store result occurrence plot.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/OccurrenceEvents-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Occurrence — OccurrenceEvents-class","text":"events integer vector giving occurrence. start numeric vector giving lower boundaries credibility interval. end numeric vector giving upper boundaries credibility interval. level length-one numeric vector giving confidence level. hash character string giving 32-byte MD5 hash original data file.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/OccurrenceEvents-class.html","id":"coerce","dir":"Reference","previous_headings":"","what":"Coerce","title":"Occurrence — OccurrenceEvents-class","text":"code snippets , x OccurrenceEvents object. .data.frame(x) Coerces data.frame.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/OccurrenceEvents-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Occurrence — OccurrenceEvents-class","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/PhasesMCMC-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC Phases — PhasesMCMC-class","title":"MCMC Phases — PhasesMCMC-class","text":"S4 classes represent collection phases.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/PhasesMCMC-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC Phases — PhasesMCMC-class","text":"phase object \\(n x m x 2\\) array, \\(n\\) number iterations, \\(m\\) number phases 2 columns third dimension containing boundaries phases.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/PhasesMCMC-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MCMC Phases — PhasesMCMC-class","text":"labels character vector specifying name phases. hash character string giving 32-byte MD5 hash original data file.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/PhasesMCMC-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"MCMC Phases — PhasesMCMC-class","text":"class inherits array.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/PhasesMCMC-class.html","id":"subset","dir":"Reference","previous_headings":"","what":"Subset","title":"MCMC Phases — PhasesMCMC-class","text":"code snippets , x PhasesMCMC object. x[[]] Extracts single phase (two chains) selected subscript . length-one numeric character vector.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/PhasesMCMC-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MCMC Phases — PhasesMCMC-class","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/TimeRange-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Events — TimeRange-class","title":"Cumulative Events — TimeRange-class","text":"S4 class represent time ranges.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/TimeRange-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Cumulative Events — TimeRange-class","text":"start,end numeric matrix giving lower upper boundaries. labels character vector specifying name events/phases. hash character string giving 32-byte MD5 hash original data file.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/TimeRange-class.html","id":"coerce","dir":"Reference","previous_headings":"","what":"Coerce","title":"Cumulative Events — TimeRange-class","text":"code snippets , x CumulativeEvents object. .data.frame(x) Coerces data.frame.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/TimeRange-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cumulative Events — TimeRange-class","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/activity.html","id":null,"dir":"Reference","previous_headings":"","what":"Activity Plot — activity","title":"Activity Plot — activity","text":"Plots first derivative tempo plot Bayesian estimate.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activity Plot — activity","text":"","code":"activity(object, ...)  # S4 method for class 'EventsMCMC' activity(   object,   from = min(object),   to = max(object),   grid = getOption(\"ArchaeoPhases.grid\") )  # S4 method for class 'CumulativeEvents' activity(object)  # S4 method for class 'ActivityEvents,missing' plot(   x,   calendar = getOption(\"ArchaeoPhases.calendar\"),   main = NULL,   sub = NULL,   ann = graphics::par(\"ann\"),   axes = TRUE,   frame.plot = axes,   panel.first = NULL,   panel.last = NULL,   ... )"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activity Plot — activity","text":"object EventsMCMC CumulativeEvents object. ... graphical parameters may also passed arguments function, particularly, border, col, lwd lty. length-one numeric vector giving earliest date estimate (years). length-one numeric vector giving latest date estimate (years). grid length-one numeric vector specifying number equally spaced points temporal grid. x ActivityEvents object. calendar aion::TimeScale object specifying target calendar (see calendar()). main character string giving main title plot. sub character string giving subtitle plot. ann logical scalar: default annotation (title x y axis labels) appear plot? axes logical scalar: axes drawn plot? frame.plot logical scalar: box drawn around plot? panel.first expression evaluated plot axes set plotting takes place. can useful drawing background grids. panel.last expression evaluated plotting taken place axes, title box added.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/activity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Activity Plot — activity","text":"activity() returns ActivityEvents object. plot() called side-effects: results graphic displayed (invisibly returns x).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/activity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Activity Plot — activity","text":"Dye, T. S. (2016). Long-term rhythms development Hawaiian social stratification. Journal Archaeological Science, 71: 1-9. doi:10.1016/j.jas.2016.05.006 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/activity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Activity Plot — activity","text":". Philippe, M.-. Vibet, T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/activity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Activity Plot — activity","text":"","code":"## Coerce to MCMC eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Tempo plot tmp <- tempo(eve) plot(tmp)  plot(tmp, interval = \"credible\", panel.first = grid())  plot(tmp, interval = \"gauss\", panel.first = grid())   ## Activity plot act <- activity(tmp) plot(act, panel.first = grid())"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_analyze.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Composite Allen Relations — allen_analyze","title":"Analyze Composite Allen Relations — allen_analyze","text":"Visualize composite Allen relations Nokel lattice.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_analyze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Composite Allen Relations — allen_analyze","text":"","code":"allen_analyze(x, y, ...)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_analyze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Composite Allen Relations — allen_analyze","text":"x, y character string denoting Allen relation. ... arguments passed internal methods.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_analyze.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Composite Allen Relations — allen_analyze","text":"allen_analyze() called side-effects: results graphic displayed.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_analyze.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyze Composite Allen Relations — allen_analyze","text":"T. S. Dye","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_analyze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Composite Allen Relations — allen_analyze","text":"","code":"allen_analyze(\"mDFo\", \"MdfO\", main = \"Composite reticulation relation\")"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_complement.html","id":null,"dir":"Reference","previous_headings":"","what":"Complement of an Allen Relation — allen_complement","title":"Complement of an Allen Relation — allen_complement","text":"Complement Allen Relation","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_complement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complement of an Allen Relation — allen_complement","text":"","code":"allen_complement(x, ...)  # S4 method for class 'character' allen_complement(x)  # S4 method for class 'matrix' allen_complement(x)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_complement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complement of an Allen Relation — allen_complement","text":"x character vector matrix Allen relations (typically returned allen_relation()). ... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_complement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complement of an Allen Relation — allen_complement","text":"character vector matrix (x).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_complement.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Complement of an Allen Relation — allen_complement","text":"Allen, J. F. (1983). Maintaining Knowledge Temporal Intervals. Communications ACM, 26(11): 832-843. doi:10.1145/182.358434 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_complement.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Complement of an Allen Relation — allen_complement","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_complement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complement of an Allen Relation — allen_complement","text":"","code":"## Data from Husi 2022 loire <- data.frame(   lower = c(625, 700, 1200, 1225, 1250, 500, 1000, 1200,             1325, 1375, 1200, 1300, 1375, 1275, 1325),   upper = c(750, 825, 1250, 1275, 1325, 700, 1300, 1325,             1400, 1500, 1300, 1375, 1500, 1325, 1425) )  ## Basic relations allen_relation(loire$lower, loire$upper) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,] NA   \"o\"  \"p\"  \"p\"  \"p\"  \"O\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [2,] \"O\"  NA   \"p\"  \"p\"  \"p\"  \"M\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [3,] \"P\"  \"P\"  NA   \"o\"  \"m\"  \"P\"  \"d\"  \"s\"  \"p\"  \"p\"   \"s\"   \"p\"   \"p\"   #>  [4,] \"P\"  \"P\"  \"O\"  NA   \"o\"  \"P\"  \"d\"  \"d\"  \"p\"  \"p\"   \"d\"   \"p\"   \"p\"   #>  [5,] \"P\"  \"P\"  \"M\"  \"O\"  NA   \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #>  [6,] \"o\"  \"m\"  \"p\"  \"p\"  \"p\"  NA   \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [7,] \"P\"  \"P\"  \"D\"  \"D\"  \"o\"  \"P\"  NA   \"o\"  \"p\"  \"p\"   \"F\"   \"m\"   \"p\"   #>  [8,] \"P\"  \"P\"  \"S\"  \"D\"  \"F\"  \"P\"  \"O\"  NA   \"m\"  \"p\"   \"S\"   \"o\"   \"p\"   #>  [9,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  NA   \"o\"   \"P\"   \"O\"   \"o\"   #> [10,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  NA    \"P\"   \"M\"   \"e\"   #> [11,] \"P\"  \"P\"  \"S\"  \"D\"  \"o\"  \"P\"  \"f\"  \"s\"  \"p\"  \"p\"   NA    \"m\"   \"p\"   #> [12,] \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"P\"  \"M\"  \"O\"  \"o\"  \"m\"   \"M\"   NA    \"m\"   #> [13,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"e\"   \"P\"   \"M\"   NA    #> [14,] \"P\"  \"P\"  \"P\"  \"M\"  \"f\"  \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #> [15,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  \"S\"  \"o\"   \"P\"   \"O\"   \"o\"   #>       [,14] [,15] #>  [1,] \"p\"   \"p\"   #>  [2,] \"p\"   \"p\"   #>  [3,] \"p\"   \"p\"   #>  [4,] \"m\"   \"p\"   #>  [5,] \"F\"   \"m\"   #>  [6,] \"p\"   \"p\"   #>  [7,] \"o\"   \"p\"   #>  [8,] \"F\"   \"m\"   #>  [9,] \"M\"   \"s\"   #> [10,] \"P\"   \"O\"   #> [11,] \"o\"   \"p\"   #> [12,] \"O\"   \"o\"   #> [13,] \"P\"   \"O\"   #> [14,] NA    \"m\"   #> [15,] \"M\"   NA     ## Complement (comp <- allen_complement(\"F\")) # \"pmoDseSdfOMP\" #> [1] \"pmoDseSdfOMP\"  ## Converse (conv <- allen_converse(comp)) # \"pmoFDseSdOMP\" #> [1] \"pmoFDseSdOMP\"  ## Composition allen_composition(\"oFD\", \"oFDseS\") # \"pmoFD\" #> [1] \"pmoFD\"  ## Intersection allen_intersect(\"pFsSf\", \"pmoFD\") # \"pF\" #> [1] \"pF\"  # Union allen_union(\"pFsSf\", \"pmoFD\") # \"pmoFDsSf\" #> [1] \"pmoFDsSf\""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_composition.html","id":null,"dir":"Reference","previous_headings":"","what":"Composition of Allen Relations — allen_composition","title":"Composition of Allen Relations — allen_composition","text":"Composition Allen Relations","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Composition of Allen Relations — allen_composition","text":"","code":"allen_composition(x, y, ...)  # S4 method for class 'character,character' allen_composition(x, y)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Composition of Allen Relations — allen_composition","text":"x, y character vector Allen relations. ... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_composition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Composition of Allen Relations — allen_composition","text":"character vector.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_composition.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Composition of Allen Relations — allen_composition","text":"Allen, J. F. (1983). Maintaining Knowledge Temporal Intervals. Communications ACM, 26(11): 832-843. doi:10.1145/182.358434 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_composition.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Composition of Allen Relations — allen_composition","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_composition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Composition of Allen Relations — allen_composition","text":"","code":"## Data from Husi 2022 loire <- data.frame(   lower = c(625, 700, 1200, 1225, 1250, 500, 1000, 1200,             1325, 1375, 1200, 1300, 1375, 1275, 1325),   upper = c(750, 825, 1250, 1275, 1325, 700, 1300, 1325,             1400, 1500, 1300, 1375, 1500, 1325, 1425) )  ## Basic relations allen_relation(loire$lower, loire$upper) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,] NA   \"o\"  \"p\"  \"p\"  \"p\"  \"O\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [2,] \"O\"  NA   \"p\"  \"p\"  \"p\"  \"M\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [3,] \"P\"  \"P\"  NA   \"o\"  \"m\"  \"P\"  \"d\"  \"s\"  \"p\"  \"p\"   \"s\"   \"p\"   \"p\"   #>  [4,] \"P\"  \"P\"  \"O\"  NA   \"o\"  \"P\"  \"d\"  \"d\"  \"p\"  \"p\"   \"d\"   \"p\"   \"p\"   #>  [5,] \"P\"  \"P\"  \"M\"  \"O\"  NA   \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #>  [6,] \"o\"  \"m\"  \"p\"  \"p\"  \"p\"  NA   \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [7,] \"P\"  \"P\"  \"D\"  \"D\"  \"o\"  \"P\"  NA   \"o\"  \"p\"  \"p\"   \"F\"   \"m\"   \"p\"   #>  [8,] \"P\"  \"P\"  \"S\"  \"D\"  \"F\"  \"P\"  \"O\"  NA   \"m\"  \"p\"   \"S\"   \"o\"   \"p\"   #>  [9,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  NA   \"o\"   \"P\"   \"O\"   \"o\"   #> [10,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  NA    \"P\"   \"M\"   \"e\"   #> [11,] \"P\"  \"P\"  \"S\"  \"D\"  \"o\"  \"P\"  \"f\"  \"s\"  \"p\"  \"p\"   NA    \"m\"   \"p\"   #> [12,] \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"P\"  \"M\"  \"O\"  \"o\"  \"m\"   \"M\"   NA    \"m\"   #> [13,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"e\"   \"P\"   \"M\"   NA    #> [14,] \"P\"  \"P\"  \"P\"  \"M\"  \"f\"  \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #> [15,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  \"S\"  \"o\"   \"P\"   \"O\"   \"o\"   #>       [,14] [,15] #>  [1,] \"p\"   \"p\"   #>  [2,] \"p\"   \"p\"   #>  [3,] \"p\"   \"p\"   #>  [4,] \"m\"   \"p\"   #>  [5,] \"F\"   \"m\"   #>  [6,] \"p\"   \"p\"   #>  [7,] \"o\"   \"p\"   #>  [8,] \"F\"   \"m\"   #>  [9,] \"M\"   \"s\"   #> [10,] \"P\"   \"O\"   #> [11,] \"o\"   \"p\"   #> [12,] \"O\"   \"o\"   #> [13,] \"P\"   \"O\"   #> [14,] NA    \"m\"   #> [15,] \"M\"   NA     ## Complement (comp <- allen_complement(\"F\")) # \"pmoDseSdfOMP\" #> [1] \"pmoDseSdfOMP\"  ## Converse (conv <- allen_converse(comp)) # \"pmoFDseSdOMP\" #> [1] \"pmoFDseSdOMP\"  ## Composition allen_composition(\"oFD\", \"oFDseS\") # \"pmoFD\" #> [1] \"pmoFD\"  ## Intersection allen_intersect(\"pFsSf\", \"pmoFD\") # \"pF\" #> [1] \"pF\"  # Union allen_union(\"pFsSf\", \"pmoFD\") # \"pmoFDsSf\" #> [1] \"pmoFDsSf\""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_converse.html","id":null,"dir":"Reference","previous_headings":"","what":"Converse of an Allen Relation — allen_converse","title":"Converse of an Allen Relation — allen_converse","text":"Converse Allen Relation","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_converse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converse of an Allen Relation — allen_converse","text":"","code":"allen_converse(x, ...)  # S4 method for class 'character' allen_converse(x)  # S4 method for class 'matrix' allen_converse(x)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_converse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converse of an Allen Relation — allen_converse","text":"x character vector matrix Allen relations (typically returned allen_relation()). ... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_converse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converse of an Allen Relation — allen_converse","text":"character vector matrix (x).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_converse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Converse of an Allen Relation — allen_converse","text":"Allen, J. F. (1983). Maintaining Knowledge Temporal Intervals. Communications ACM, 26(11): 832-843. doi:10.1145/182.358434 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_converse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converse of an Allen Relation — allen_converse","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_converse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converse of an Allen Relation — allen_converse","text":"","code":"## Data from Husi 2022 loire <- data.frame(   lower = c(625, 700, 1200, 1225, 1250, 500, 1000, 1200,             1325, 1375, 1200, 1300, 1375, 1275, 1325),   upper = c(750, 825, 1250, 1275, 1325, 700, 1300, 1325,             1400, 1500, 1300, 1375, 1500, 1325, 1425) )  ## Basic relations allen_relation(loire$lower, loire$upper) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,] NA   \"o\"  \"p\"  \"p\"  \"p\"  \"O\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [2,] \"O\"  NA   \"p\"  \"p\"  \"p\"  \"M\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [3,] \"P\"  \"P\"  NA   \"o\"  \"m\"  \"P\"  \"d\"  \"s\"  \"p\"  \"p\"   \"s\"   \"p\"   \"p\"   #>  [4,] \"P\"  \"P\"  \"O\"  NA   \"o\"  \"P\"  \"d\"  \"d\"  \"p\"  \"p\"   \"d\"   \"p\"   \"p\"   #>  [5,] \"P\"  \"P\"  \"M\"  \"O\"  NA   \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #>  [6,] \"o\"  \"m\"  \"p\"  \"p\"  \"p\"  NA   \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [7,] \"P\"  \"P\"  \"D\"  \"D\"  \"o\"  \"P\"  NA   \"o\"  \"p\"  \"p\"   \"F\"   \"m\"   \"p\"   #>  [8,] \"P\"  \"P\"  \"S\"  \"D\"  \"F\"  \"P\"  \"O\"  NA   \"m\"  \"p\"   \"S\"   \"o\"   \"p\"   #>  [9,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  NA   \"o\"   \"P\"   \"O\"   \"o\"   #> [10,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  NA    \"P\"   \"M\"   \"e\"   #> [11,] \"P\"  \"P\"  \"S\"  \"D\"  \"o\"  \"P\"  \"f\"  \"s\"  \"p\"  \"p\"   NA    \"m\"   \"p\"   #> [12,] \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"P\"  \"M\"  \"O\"  \"o\"  \"m\"   \"M\"   NA    \"m\"   #> [13,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"e\"   \"P\"   \"M\"   NA    #> [14,] \"P\"  \"P\"  \"P\"  \"M\"  \"f\"  \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #> [15,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  \"S\"  \"o\"   \"P\"   \"O\"   \"o\"   #>       [,14] [,15] #>  [1,] \"p\"   \"p\"   #>  [2,] \"p\"   \"p\"   #>  [3,] \"p\"   \"p\"   #>  [4,] \"m\"   \"p\"   #>  [5,] \"F\"   \"m\"   #>  [6,] \"p\"   \"p\"   #>  [7,] \"o\"   \"p\"   #>  [8,] \"F\"   \"m\"   #>  [9,] \"M\"   \"s\"   #> [10,] \"P\"   \"O\"   #> [11,] \"o\"   \"p\"   #> [12,] \"O\"   \"o\"   #> [13,] \"P\"   \"O\"   #> [14,] NA    \"m\"   #> [15,] \"M\"   NA     ## Complement (comp <- allen_complement(\"F\")) # \"pmoDseSdfOMP\" #> [1] \"pmoDseSdfOMP\"  ## Converse (conv <- allen_converse(comp)) # \"pmoFDseSdOMP\" #> [1] \"pmoFDseSdOMP\"  ## Composition allen_composition(\"oFD\", \"oFDseS\") # \"pmoFD\" #> [1] \"pmoFD\"  ## Intersection allen_intersect(\"pFsSf\", \"pmoFD\") # \"pF\" #> [1] \"pF\"  # Union allen_union(\"pFsSf\", \"pmoFD\") # \"pmoFDsSf\" #> [1] \"pmoFDsSf\""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_illustrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrate Basic and Composite Allen Relations — allen_illustrate","title":"Illustrate Basic and Composite Allen Relations — allen_illustrate","text":"Illustrate Basic Composite Allen Relations","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_illustrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrate Basic and Composite Allen Relations — allen_illustrate","text":"","code":"allen_illustrate(relations = \"basic\", ...)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_illustrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrate Basic and Composite Allen Relations — allen_illustrate","text":"relations character string specifying relation. must one \"basic\", \"concurrent\", \"distinct\", \"stratigraphic\", \"branching\", \"transformation\", \"reticulation\", \"sequence\", \"branch\", \"transform\", \"reticulate\" (see details). ... arguments passed internal methods.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_illustrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrate Basic and Composite Allen Relations — allen_illustrate","text":"allen_illustrate() called side-effects: results graphic displayed.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_illustrate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Illustrate Basic and Composite Allen Relations — allen_illustrate","text":"Illustrate basic composite Allen relations several chronological model domains Nokel lattice. Chronological model domains include stratigraphy branching, transformative, reticulate processes artifact change. illustrative graphics include: basic 13 basic Allen relations (default); concurrent concurrent relations; distinct relations distinct endpoints; stratigraphic basic relations established observation superposition; branching basic branching relations; transformation basic relations transformation; reticulation basic relations reticulation; sequence composite relations stratigraphic sequence; branch composite relations branching; transform composite relations transformation; reticulate composite relations reticulation.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_illustrate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Illustrate Basic and Composite Allen Relations — allen_illustrate","text":"Harris, E. C. (1997). Principles Archaeological Stratigraphy. Second edition. London: Academic Press. Lyman, R. L. O'Brien, M. J. (2017). \"Sedation Cladistics: Difference Anagenetic Cladogenetic Evolution\". Mapping Ancestors: Phylogenetic Approaches Anthropology Prehistory, edited Lipo, C. P., O'Brien, M. J., Couard, M., Shennan, S. J. New York: Routledge. doi:10.4324/9780203786376 . Viola, T. (2020). Peirce Uses History. De Gruyter. doi:10.1515/9783110651560 . See chapter 3, \"Historicity Process\", especially p. 83-88.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_illustrate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Illustrate Basic and Composite Allen Relations — allen_illustrate","text":"T. S. Dye","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_illustrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Illustrate Basic and Composite Allen Relations — allen_illustrate","text":"","code":"## Plot the basic Allen relations allen_illustrate()"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_intersect.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersection of Allen Relations — allen_intersect","title":"Intersection of Allen Relations — allen_intersect","text":"Intersection Allen Relations","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_intersect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersection of Allen Relations — allen_intersect","text":"","code":"allen_intersect(x, y, ...)  # S4 method for class 'character,character' allen_intersect(x, y)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_intersect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersection of Allen Relations — allen_intersect","text":"x, y character vector Allen relations. ... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_intersect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersection of Allen Relations — allen_intersect","text":"character vector.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_intersect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intersection of Allen Relations — allen_intersect","text":"Allen, J. F. (1983). Maintaining Knowledge Temporal Intervals. Communications ACM, 26(11): 832-843. doi:10.1145/182.358434 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_intersect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Intersection of Allen Relations — allen_intersect","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_intersect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intersection of Allen Relations — allen_intersect","text":"","code":"## Data from Husi 2022 loire <- data.frame(   lower = c(625, 700, 1200, 1225, 1250, 500, 1000, 1200,             1325, 1375, 1200, 1300, 1375, 1275, 1325),   upper = c(750, 825, 1250, 1275, 1325, 700, 1300, 1325,             1400, 1500, 1300, 1375, 1500, 1325, 1425) )  ## Basic relations allen_relation(loire$lower, loire$upper) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,] NA   \"o\"  \"p\"  \"p\"  \"p\"  \"O\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [2,] \"O\"  NA   \"p\"  \"p\"  \"p\"  \"M\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [3,] \"P\"  \"P\"  NA   \"o\"  \"m\"  \"P\"  \"d\"  \"s\"  \"p\"  \"p\"   \"s\"   \"p\"   \"p\"   #>  [4,] \"P\"  \"P\"  \"O\"  NA   \"o\"  \"P\"  \"d\"  \"d\"  \"p\"  \"p\"   \"d\"   \"p\"   \"p\"   #>  [5,] \"P\"  \"P\"  \"M\"  \"O\"  NA   \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #>  [6,] \"o\"  \"m\"  \"p\"  \"p\"  \"p\"  NA   \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [7,] \"P\"  \"P\"  \"D\"  \"D\"  \"o\"  \"P\"  NA   \"o\"  \"p\"  \"p\"   \"F\"   \"m\"   \"p\"   #>  [8,] \"P\"  \"P\"  \"S\"  \"D\"  \"F\"  \"P\"  \"O\"  NA   \"m\"  \"p\"   \"S\"   \"o\"   \"p\"   #>  [9,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  NA   \"o\"   \"P\"   \"O\"   \"o\"   #> [10,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  NA    \"P\"   \"M\"   \"e\"   #> [11,] \"P\"  \"P\"  \"S\"  \"D\"  \"o\"  \"P\"  \"f\"  \"s\"  \"p\"  \"p\"   NA    \"m\"   \"p\"   #> [12,] \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"P\"  \"M\"  \"O\"  \"o\"  \"m\"   \"M\"   NA    \"m\"   #> [13,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"e\"   \"P\"   \"M\"   NA    #> [14,] \"P\"  \"P\"  \"P\"  \"M\"  \"f\"  \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #> [15,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  \"S\"  \"o\"   \"P\"   \"O\"   \"o\"   #>       [,14] [,15] #>  [1,] \"p\"   \"p\"   #>  [2,] \"p\"   \"p\"   #>  [3,] \"p\"   \"p\"   #>  [4,] \"m\"   \"p\"   #>  [5,] \"F\"   \"m\"   #>  [6,] \"p\"   \"p\"   #>  [7,] \"o\"   \"p\"   #>  [8,] \"F\"   \"m\"   #>  [9,] \"M\"   \"s\"   #> [10,] \"P\"   \"O\"   #> [11,] \"o\"   \"p\"   #> [12,] \"O\"   \"o\"   #> [13,] \"P\"   \"O\"   #> [14,] NA    \"m\"   #> [15,] \"M\"   NA     ## Complement (comp <- allen_complement(\"F\")) # \"pmoDseSdfOMP\" #> [1] \"pmoDseSdfOMP\"  ## Converse (conv <- allen_converse(comp)) # \"pmoFDseSdOMP\" #> [1] \"pmoFDseSdOMP\"  ## Composition allen_composition(\"oFD\", \"oFDseS\") # \"pmoFD\" #> [1] \"pmoFD\"  ## Intersection allen_intersect(\"pFsSf\", \"pmoFD\") # \"pF\" #> [1] \"pF\"  # Union allen_union(\"pFsSf\", \"pmoFD\") # \"pmoFDsSf\" #> [1] \"pmoFDsSf\""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_joint_concurrency.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint Concurrence of Two or More Observed Intervals — allen_joint_concurrency","title":"Joint Concurrence of Two or More Observed Intervals — allen_joint_concurrency","text":"Estimates age undated context based known depositional history associated artifacts.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_joint_concurrency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint Concurrence of Two or More Observed Intervals — allen_joint_concurrency","text":"","code":"allen_joint_concurrency(x, groups, ...)  # S4 method for class 'EventsMCMC,list' allen_joint_concurrency(x, groups, ...)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_joint_concurrency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint Concurrence of Two or More Observed Intervals — allen_joint_concurrency","text":"x EventsMCMC object containing output MCMC algorithm. groups list (named) vector names indexes columns x (see phases()). ... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_joint_concurrency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint Concurrence of Two or More Observed Intervals — allen_joint_concurrency","text":"PhasesMCMC object.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_joint_concurrency.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Joint Concurrence of Two or More Observed Intervals — allen_joint_concurrency","text":"T. S. Dye","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe.html","id":null,"dir":"Reference","previous_headings":"","what":"Observe the Relation Between two Phases — allen_observe","title":"Observe the Relation Between two Phases — allen_observe","text":"Plots empirical Nökel lattice.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observe the Relation Between two Phases — allen_observe","text":"","code":"allen_observe(x, groups, ...)  # S4 method for class 'PhasesMCMC,missing' allen_observe(x, converse = TRUE, ...)  # S4 method for class 'EventsMCMC,list' allen_observe(x, groups, converse = TRUE, ...)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observe the Relation Between two Phases — allen_observe","text":"x EventsMCMC PhasesMCMC object containing output MCMC algorithm. groups list (named) vector names indexes columns x (see phases()). ... arguments passed internal methods. converse logical scalar: converse relations observed?","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observe the Relation Between two Phases — allen_observe","text":"allen_observe() called side-effects: results graphic displayed (invisibly returns x).","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Observe the Relation Between two Phases — allen_observe","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Observe the Relation Between two Phases — allen_observe","text":"","code":"if (requireNamespace(\"ArchaeoData\", quietly = TRUE)) {   ## Load the Anglo Saxon burials dataset   path <- system.file(\"oxcal/burials.csv\", package = \"ArchaeoData\")   burials <- read.table(path, header = TRUE, sep = \",\", dec = \".\",                         check.names = FALSE)    ## Coerce to event   burials <- as_events(burials, calendar = CE())    ## Dates associated with bead BE3 Amber   be3_amber <- c(     \"UB-4836 (WG27)\", \"UB-5208 (ApD107)\", \"UB-4965 (ApD117)\",     \"UB-4735 (Ber022)\", \"UB-4739 (Ber134/1)\", \"UB-4728 (MH064)\",     \"UB-4729 (MH068)\", \"UB-4732 (MH094)\", \"UB-4733 (MH095)\",     \"UB-4734 (MH105c)\", \"UB-4984 (Lec018)\", \"UB-4709 (EH014)\",     \"UB-4707 (EH079)\", \"UB-4708 (EH083)\", \"UB-6033 (WHes113)\",     \"UB-4706 (WHes118)\", \"UB-4705 (WHes123)\", \"UB-6040 (CasD053)\",     \"UB-6037 (CasD134)\", \"UB-6472 (BuD222)\", \"UB-6473 (BuD250)\",     \"UB-6476 (BuD339)\", \"UB-4963 (SPTip208)\", \"UB-4890 (MelSG075)\",     \"UB-4887 (MelSG082)\", \"UB-4888 (MelSG089)\", \"MaDE1 & E2\",     \"UB-4552 (MaDE3)\", \"UB-4975 (AstCli12)\", \"UB-4835 (ApD134)\",     \"SUERC-39108 ERLK G322\", \"SUERC-39109 ERL G362\", \"SUERC-39112 ERL G405\",     \"SUERC-51560 ERL G038\", \"SUERC-39091 (ERL G003)\", \"SUERC-39092 (ERL G005)\",     \"SUERC-39113 (ERL G417)\", \"SUERC-51549 (ERL G195)\", \"SUERC-51552 (ERL G107)\",     \"SUERC-51550 (ERL G254)\"   )    ## Dates associated with bead BE1 Dghnt   be1_dghnt <- c(     \"UB-4503 (Lec148)\", \"UB-4506 (Lec172/2)\", \"UB-6038 (CasD183)\",     \"UB-4512 (EH091)\", \"UB-4501 (Lec014)\", \"UB-4507 (Lec187)\",     \"UB-4502 (Lec138)\", \"UB-4042 (But1674)\", \"SUERC-39100 (ERL G266)\"   )    ## Construct a list of lists   chains <- list(     list(\"BE3-Amber\" = be3_amber, \"BE1-Dghnt\" = be1_dghnt),     list(\"BE1-Dghnt\" = be1_dghnt, \"BE3-Amber\" = be3_amber)   )    ## Plot   allen_observe(x = burials, groups = chains)    ## Observe 2x2 frequency matrix of the relation of trunk to branch   allen_observe_frequency(burials, groups = chains, set = \"oFD\") }  #>           BE3-Amber BE1-Dghnt #> BE3-Amber        NA         1 #> BE1-Dghnt         0        NA"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Observed Frequency of an Allen Set — allen_observe_frequency","title":"Observed Frequency of an Allen Set — allen_observe_frequency","text":"Creates matrix observed frequencies given Allen set among two groups chains MCMC output Bayesian calibration.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observed Frequency of an Allen Set — allen_observe_frequency","text":"","code":"allen_observe_frequency(x, groups, ...)  # S4 method for class 'PhasesMCMC,missing' allen_observe_frequency(x, set)  # S4 method for class 'EventsMCMC,list' allen_observe_frequency(x, groups, ...)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observed Frequency of an Allen Set — allen_observe_frequency","text":"x EventsMCMC PhasesMCMC object containing output MCMC algorithm. groups list (named) vector names indexes columns x (see phases()). ... Currently used. set character string representation Allen set.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observed Frequency of an Allen Set — allen_observe_frequency","text":"square matrix observed frequencies.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe_frequency.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Observed Frequency of an Allen Set — allen_observe_frequency","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_observe_frequency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Observed Frequency of an Allen Set — allen_observe_frequency","text":"","code":"if (requireNamespace(\"ArchaeoData\", quietly = TRUE)) {   ## Load the Anglo Saxon burials dataset   path <- system.file(\"oxcal/burials.csv\", package = \"ArchaeoData\")   burials <- read.table(path, header = TRUE, sep = \",\", dec = \".\",                         check.names = FALSE)    ## Coerce to event   burials <- as_events(burials, calendar = CE())    ## Dates associated with bead BE3 Amber   be3_amber <- c(     \"UB-4836 (WG27)\", \"UB-5208 (ApD107)\", \"UB-4965 (ApD117)\",     \"UB-4735 (Ber022)\", \"UB-4739 (Ber134/1)\", \"UB-4728 (MH064)\",     \"UB-4729 (MH068)\", \"UB-4732 (MH094)\", \"UB-4733 (MH095)\",     \"UB-4734 (MH105c)\", \"UB-4984 (Lec018)\", \"UB-4709 (EH014)\",     \"UB-4707 (EH079)\", \"UB-4708 (EH083)\", \"UB-6033 (WHes113)\",     \"UB-4706 (WHes118)\", \"UB-4705 (WHes123)\", \"UB-6040 (CasD053)\",     \"UB-6037 (CasD134)\", \"UB-6472 (BuD222)\", \"UB-6473 (BuD250)\",     \"UB-6476 (BuD339)\", \"UB-4963 (SPTip208)\", \"UB-4890 (MelSG075)\",     \"UB-4887 (MelSG082)\", \"UB-4888 (MelSG089)\", \"MaDE1 & E2\",     \"UB-4552 (MaDE3)\", \"UB-4975 (AstCli12)\", \"UB-4835 (ApD134)\",     \"SUERC-39108 ERLK G322\", \"SUERC-39109 ERL G362\", \"SUERC-39112 ERL G405\",     \"SUERC-51560 ERL G038\", \"SUERC-39091 (ERL G003)\", \"SUERC-39092 (ERL G005)\",     \"SUERC-39113 (ERL G417)\", \"SUERC-51549 (ERL G195)\", \"SUERC-51552 (ERL G107)\",     \"SUERC-51550 (ERL G254)\"   )    ## Dates associated with bead BE1 Dghnt   be1_dghnt <- c(     \"UB-4503 (Lec148)\", \"UB-4506 (Lec172/2)\", \"UB-6038 (CasD183)\",     \"UB-4512 (EH091)\", \"UB-4501 (Lec014)\", \"UB-4507 (Lec187)\",     \"UB-4502 (Lec138)\", \"UB-4042 (But1674)\", \"SUERC-39100 (ERL G266)\"   )    ## Construct a list of lists   chains <- list(     list(\"BE3-Amber\" = be3_amber, \"BE1-Dghnt\" = be1_dghnt),     list(\"BE1-Dghnt\" = be1_dghnt, \"BE3-Amber\" = be3_amber)   )    ## Plot   allen_observe(x = burials, groups = chains)    ## Observe 2x2 frequency matrix of the relation of trunk to branch   allen_observe_frequency(burials, groups = chains, set = \"oFD\") }  #>           BE3-Amber BE1-Dghnt #> BE3-Amber        NA         1 #> BE1-Dghnt         0        NA"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation.html","id":null,"dir":"Reference","previous_headings":"","what":"Allen Relation Between Definite Intervals — allen_relation","title":"Allen Relation Between Definite Intervals — allen_relation","text":"Allen Relation Definite Intervals","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allen Relation Between Definite Intervals — allen_relation","text":"","code":"allen_relation(x, y, ...)  # S4 method for class 'numeric,numeric' allen_relation(x, y)  # S4 method for class 'ANY,missing' allen_relation(x)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allen Relation Between Definite Intervals — allen_relation","text":"x, y numeric vector giving lower upper boundaries time intervals, respectively. y missing, attempt made interpret x suitable way (see grDevices::xy.coords()). ... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allen Relation Between Definite Intervals — allen_relation","text":"character matrix specifying Allen relations.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Allen Relation Between Definite Intervals — allen_relation","text":"Allen, J. F. (1983). Maintaining Knowledge Temporal Intervals. Communications ACM, 26(11): 832-843. doi:10.1145/182.358434 . Alspaugh, T. (2019). Allen's Interval Algebra. URL: https://thomasalspaugh.org/pub/fnd/allen.html.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Allen Relation Between Definite Intervals — allen_relation","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Allen Relation Between Definite Intervals — allen_relation","text":"","code":"## Data from Husi 2022 loire <- data.frame(   lower = c(625, 700, 1200, 1225, 1250, 500, 1000, 1200,             1325, 1375, 1200, 1300, 1375, 1275, 1325),   upper = c(750, 825, 1250, 1275, 1325, 700, 1300, 1325,             1400, 1500, 1300, 1375, 1500, 1325, 1425) )  ## Basic relations allen_relation(loire$lower, loire$upper) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,] NA   \"o\"  \"p\"  \"p\"  \"p\"  \"O\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [2,] \"O\"  NA   \"p\"  \"p\"  \"p\"  \"M\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [3,] \"P\"  \"P\"  NA   \"o\"  \"m\"  \"P\"  \"d\"  \"s\"  \"p\"  \"p\"   \"s\"   \"p\"   \"p\"   #>  [4,] \"P\"  \"P\"  \"O\"  NA   \"o\"  \"P\"  \"d\"  \"d\"  \"p\"  \"p\"   \"d\"   \"p\"   \"p\"   #>  [5,] \"P\"  \"P\"  \"M\"  \"O\"  NA   \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #>  [6,] \"o\"  \"m\"  \"p\"  \"p\"  \"p\"  NA   \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [7,] \"P\"  \"P\"  \"D\"  \"D\"  \"o\"  \"P\"  NA   \"o\"  \"p\"  \"p\"   \"F\"   \"m\"   \"p\"   #>  [8,] \"P\"  \"P\"  \"S\"  \"D\"  \"F\"  \"P\"  \"O\"  NA   \"m\"  \"p\"   \"S\"   \"o\"   \"p\"   #>  [9,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  NA   \"o\"   \"P\"   \"O\"   \"o\"   #> [10,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  NA    \"P\"   \"M\"   \"e\"   #> [11,] \"P\"  \"P\"  \"S\"  \"D\"  \"o\"  \"P\"  \"f\"  \"s\"  \"p\"  \"p\"   NA    \"m\"   \"p\"   #> [12,] \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"P\"  \"M\"  \"O\"  \"o\"  \"m\"   \"M\"   NA    \"m\"   #> [13,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"e\"   \"P\"   \"M\"   NA    #> [14,] \"P\"  \"P\"  \"P\"  \"M\"  \"f\"  \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #> [15,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  \"S\"  \"o\"   \"P\"   \"O\"   \"o\"   #>       [,14] [,15] #>  [1,] \"p\"   \"p\"   #>  [2,] \"p\"   \"p\"   #>  [3,] \"p\"   \"p\"   #>  [4,] \"m\"   \"p\"   #>  [5,] \"F\"   \"m\"   #>  [6,] \"p\"   \"p\"   #>  [7,] \"o\"   \"p\"   #>  [8,] \"F\"   \"m\"   #>  [9,] \"M\"   \"s\"   #> [10,] \"P\"   \"O\"   #> [11,] \"o\"   \"p\"   #> [12,] \"O\"   \"o\"   #> [13,] \"P\"   \"O\"   #> [14,] NA    \"m\"   #> [15,] \"M\"   NA     ## Complement (comp <- allen_complement(\"F\")) # \"pmoDseSdfOMP\" #> [1] \"pmoDseSdfOMP\"  ## Converse (conv <- allen_converse(comp)) # \"pmoFDseSdOMP\" #> [1] \"pmoFDseSdOMP\"  ## Composition allen_composition(\"oFD\", \"oFDseS\") # \"pmoFD\" #> [1] \"pmoFD\"  ## Intersection allen_intersect(\"pFsSf\", \"pmoFD\") # \"pF\" #> [1] \"pF\"  # Union allen_union(\"pFsSf\", \"pmoFD\") # \"pmoFDsSf\" #> [1] \"pmoFDsSf\""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation_code.html","id":null,"dir":"Reference","previous_headings":"","what":"The Basic Allen Relation Set — allen_relation_code","title":"The Basic Allen Relation Set — allen_relation_code","text":"Basic Allen Relation Set","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Basic Allen Relation Set — allen_relation_code","text":"","code":"allen_relation_code(...)  allen_relation_string(...)  allen_relation_concurrent(...)  allen_relation_distinct(...)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Basic Allen Relation Set — allen_relation_code","text":"... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Basic Allen Relation Set — allen_relation_code","text":"allen_relation_code() returns character vector one-letter codes thirteen basic Allen relations. allen_relation_string() returns character vector string descriptors Allen basic relations. allen_relation_concurrent() returns character vector nine one-letter codes Allen concurrent relations. allen_relation_distinct() returns six value Allen relation set intervals distinct endpoints.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation_code.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Basic Allen Relation Set — allen_relation_code","text":"codes proposed Thomas Alspaugh.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation_code.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Basic Allen Relation Set — allen_relation_code","text":"Allen, J. F. (1983). Maintaining Knowledge Temporal Intervals. Communications ACM, 26(11): 832-843. doi:10.1145/182.358434 . Alspaugh, T. (2019). Allen's Interval Algebra. URL: https://thomasalspaugh.org/pub/fnd/allen.html.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_relation_code.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Basic Allen Relation Set — allen_relation_code","text":"T. S. Dye","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_union.html","id":null,"dir":"Reference","previous_headings":"","what":"Union of Allen Relations — allen_union","title":"Union of Allen Relations — allen_union","text":"Union Allen Relations","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Union of Allen Relations — allen_union","text":"","code":"allen_union(x, y, ...)  # S4 method for class 'character,character' allen_union(x, y)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Union of Allen Relations — allen_union","text":"x, y character vector Allen relations. ... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_union.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Union of Allen Relations — allen_union","text":"character vector.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_union.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Union of Allen Relations — allen_union","text":"Allen, J. F. (1983). Maintaining Knowledge Temporal Intervals. Communications ACM, 26(11): 832-843. doi:10.1145/182.358434 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_union.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Union of Allen Relations — allen_union","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/allen_union.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Union of Allen Relations — allen_union","text":"","code":"## Data from Husi 2022 loire <- data.frame(   lower = c(625, 700, 1200, 1225, 1250, 500, 1000, 1200,             1325, 1375, 1200, 1300, 1375, 1275, 1325),   upper = c(750, 825, 1250, 1275, 1325, 700, 1300, 1325,             1400, 1500, 1300, 1375, 1500, 1325, 1425) )  ## Basic relations allen_relation(loire$lower, loire$upper) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,] NA   \"o\"  \"p\"  \"p\"  \"p\"  \"O\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [2,] \"O\"  NA   \"p\"  \"p\"  \"p\"  \"M\"  \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [3,] \"P\"  \"P\"  NA   \"o\"  \"m\"  \"P\"  \"d\"  \"s\"  \"p\"  \"p\"   \"s\"   \"p\"   \"p\"   #>  [4,] \"P\"  \"P\"  \"O\"  NA   \"o\"  \"P\"  \"d\"  \"d\"  \"p\"  \"p\"   \"d\"   \"p\"   \"p\"   #>  [5,] \"P\"  \"P\"  \"M\"  \"O\"  NA   \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #>  [6,] \"o\"  \"m\"  \"p\"  \"p\"  \"p\"  NA   \"p\"  \"p\"  \"p\"  \"p\"   \"p\"   \"p\"   \"p\"   #>  [7,] \"P\"  \"P\"  \"D\"  \"D\"  \"o\"  \"P\"  NA   \"o\"  \"p\"  \"p\"   \"F\"   \"m\"   \"p\"   #>  [8,] \"P\"  \"P\"  \"S\"  \"D\"  \"F\"  \"P\"  \"O\"  NA   \"m\"  \"p\"   \"S\"   \"o\"   \"p\"   #>  [9,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  NA   \"o\"   \"P\"   \"O\"   \"o\"   #> [10,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  NA    \"P\"   \"M\"   \"e\"   #> [11,] \"P\"  \"P\"  \"S\"  \"D\"  \"o\"  \"P\"  \"f\"  \"s\"  \"p\"  \"p\"   NA    \"m\"   \"p\"   #> [12,] \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"P\"  \"M\"  \"O\"  \"o\"  \"m\"   \"M\"   NA    \"m\"   #> [13,] \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"P\"  \"O\"  \"e\"   \"P\"   \"M\"   NA    #> [14,] \"P\"  \"P\"  \"P\"  \"M\"  \"f\"  \"P\"  \"O\"  \"f\"  \"m\"  \"p\"   \"O\"   \"o\"   \"p\"   #> [15,] \"P\"  \"P\"  \"P\"  \"P\"  \"M\"  \"P\"  \"P\"  \"M\"  \"S\"  \"o\"   \"P\"   \"O\"   \"o\"   #>       [,14] [,15] #>  [1,] \"p\"   \"p\"   #>  [2,] \"p\"   \"p\"   #>  [3,] \"p\"   \"p\"   #>  [4,] \"m\"   \"p\"   #>  [5,] \"F\"   \"m\"   #>  [6,] \"p\"   \"p\"   #>  [7,] \"o\"   \"p\"   #>  [8,] \"F\"   \"m\"   #>  [9,] \"M\"   \"s\"   #> [10,] \"P\"   \"O\"   #> [11,] \"o\"   \"p\"   #> [12,] \"O\"   \"o\"   #> [13,] \"P\"   \"O\"   #> [14,] NA    \"m\"   #> [15,] \"M\"   NA     ## Complement (comp <- allen_complement(\"F\")) # \"pmoDseSdfOMP\" #> [1] \"pmoDseSdfOMP\"  ## Converse (conv <- allen_converse(comp)) # \"pmoFDseSdOMP\" #> [1] \"pmoFDseSdOMP\"  ## Composition allen_composition(\"oFD\", \"oFDseS\") # \"pmoFD\" #> [1] \"pmoFD\"  ## Intersection allen_intersect(\"pFsSf\", \"pmoFD\") # \"pF\" #> [1] \"pF\"  # Union allen_union(\"pFsSf\", \"pmoFD\") # \"pmoFDsSf\" #> [1] \"pmoFDsSf\""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_coda.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to Coda — as_coda","title":"Coerce to Coda — as_coda","text":"Extracts parallel chains MCMC object create mcmc.list object use coda diagnostic tools.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_coda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to Coda — as_coda","text":"","code":"as_coda(from, ...)  # S4 method for class 'MCMC' as_coda(from, chains = 1)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_coda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to Coda — as_coda","text":"object coerced. ... Currently used. chains integer specifying number parallel chains (defaults \\(1\\)).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_coda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to Coda — as_coda","text":"coda::mcmc.list object.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_coda.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce to Coda — as_coda","text":". Philippe, M.-. Vibet","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_coda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to Coda — as_coda","text":"","code":"if (requireNamespace(\"coda\", quietly = TRUE)) {   ## Load coda   library(coda)    ## Coerce to MCMC   eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)    ## Coerce to coda   mc <- as_coda(eve[, 1:2], chains = 3)   plot(mc)    ## Autocorrelation   autocorr.plot(mc)    ## Gelman-Rubin diagnostic   ## The multivariate criterion can not be evaluated when a phase   ## contains only one date. This induces colinearity problems.   gelman.diag(mc)   gelman.plot(mc) }"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to Events — as_events","title":"Coerce to Events — as_events","text":"Coerce Events","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to Events — as_events","text":"","code":"as_events(from, ...)  # S4 method for class 'matrix' as_events(from, calendar, iteration = NULL)  # S4 method for class 'data.frame' as_events(from, calendar, iteration = NULL)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to Events — as_events","text":"object coerced. ... Currently used. calendar aion::TimeScale object specifying source calendar (see calendar()). iteration length-one numeric vector specifying index iteration column.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to Events — as_events","text":"EventsMCMC object.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce to Events — as_events","text":". Philippe, M.-. Vibet, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to Events — as_events","text":"","code":"## Coerce to events eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)  ## Plot first event plot(eve[, 1], interval = \"hdr\")   ## Colorfull plot plot(eve, col.density = c(\"#4477AA\", \"#EE6677\", \"#228833\", \"#CCBB44\"))   ## Plot events plot(eve, calendar = CE(), interval = \"credible\", level = 0.68)  plot(eve, calendar = BP(), interval = \"hdr\", level = 0.68)   ## Plot only 95% credible interval plot(eve, density = FALSE, interval = \"credible\", lwd = 3, tcl = 0)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_phases.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to Phases — as_phases","title":"Coerce to Phases — as_phases","text":"Coerce Phases","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_phases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to Phases — as_phases","text":"","code":"as_phases(from, ...)  # S4 method for class 'matrix' as_phases(   from,   calendar = NULL,   start = seq(from = 1, to = ncol(from), by = 2),   stop = start + 1,   names = NULL,   iteration = NULL )  # S4 method for class 'data.frame' as_phases(   from,   calendar,   start = seq(from = 1, to = ncol(from), by = 2),   stop = start + 1,   names = NULL,   iteration = NULL )"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_phases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to Phases — as_phases","text":"object coerced. ... Currently used. calendar aion::TimeScale object specifying source calendar (see calendar()). start integer vector specifying index columns corresponding beginning phases. missing, every column used starting first column (deleting iteration column, ). stop integer vector specifying index columns corresponding end phases. missing, every column used starting second column (deleting iteration column, ). names character vector giving names phases. iteration length-one numeric vector specifying index iteration column.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_phases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to Phases — as_phases","text":"PhasesMCMC object.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_phases.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce to Phases — as_phases","text":". Philippe, M.-. Vibet, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/as_phases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to Phases — as_phases","text":"","code":"## Coerce to phases (pha <- as_phases(mcmc_phases, start = c(1, 3), calendar = CE(), iteration = 1)) #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 30000 summary(pha, calendar = CE()) #> $P1 #>           mad mean  sd   min   q1 median   q3  max start  end #> start    -708 -773 148 -1349 -890   -749 -671 -207 -1059 -501 #> end      -690 -521 169 -1050 -670   -537 -384   -5  -776 -214 #> duration  278  253 138     1  151    249  345  880     1  487 #>  #> $P2 #>            mad  mean  sd   min    q1 median    q3   max start   end #> start    -1766 -1785 100 -2000 -1857  -1785 -1719 -1223 -1981 -1611 #> end      -1240 -1235  87 -1833 -1289  -1235 -1181  -719 -1404 -1067 #> duration   561   551 132     5   464    552   639  1157   297   806 #>   ## Plot phases plot(pha)  plot(pha, succession = \"hiatus\")  plot(pha, succession = \"transition\")   ## Compute phases from events (eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)) #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  ## Compute min-max range for all chains pha1 <- phases(eve) summary(pha1, calendar = CE()) #> $P1 #>            mad  mean  sd   min    q1 median    q3   max start   end #> start    -1766 -1785 100 -2000 -1857  -1785 -1719 -1223 -1981 -1611 #> end       -690  -521 169 -1050  -670   -537  -384    -5  -776  -214 #> duration  1167  1265 196   483  1116   1253  1411  1947   915  1637 #>   ## Compute min-max range by group pha2 <- phases(eve, groups = list(phase_1 = c(1, 3), phase_2 = c(2, 4))) summary(pha2, calendar = CE()) #> $phase_1 #>           mad mean  sd   min   q1 median   q3  max start  end #> start    -708 -773 148 -1349 -890   -749 -671 -207 -1059 -501 #> end      -690 -521 169 -1050 -670   -537 -384   -5  -776 -214 #> duration  278  253 138     1  151    249  345  880     1  487 #>  #> $phase_2 #>            mad  mean  sd   min    q1 median    q3   max start   end #> start    -1766 -1785 100 -2000 -1857  -1785 -1719 -1223 -1981 -1611 #> end      -1240 -1235  87 -1833 -1289  -1235 -1181  -719 -1404 -1067 #> duration   561   551 132     5   464    552   639  1157   297   806 #>    zz <- pha@.Data head(zz) #> , , start #>  #>             P1        P2 #> [1,] -319045.0 -625448.0 #> [2,] -273570.0 -629970.0 #> [3,] -335555.9 -604871.0 #> [4,] -319169.8 -609557.0 #> [5,] -323497.0 -706432.8 #> [6,] -355422.6 -677593.3 #>  #> , , end #>  #>             P1        P2 #> [1,] -267769.1 -399848.8 #> [2,] -270327.0 -435810.7 #> [3,] -231655.0 -431449.5 #> [4,] -255757.0 -448294.4 #> [5,] -300265.5 -478087.0 #> [6,] -263102.0 -444912.5 #>   head(zz[, 1, ]) #>          start       end #> [1,] -319045.0 -267769.1 #> [2,] -273570.0 -270327.0 #> [3,] -335555.9 -231655.0 #> [4,] -319169.8 -255757.0 #> [5,] -323497.0 -300265.5 #> [6,] -355422.6 -263102.0  head(pha) #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 6"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bind.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine two MCMC Objects — bind","title":"Combine two MCMC Objects — bind","text":"Combine two MCMC Objects","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine two MCMC Objects — bind","text":"","code":"# S4 method for class 'MCMC,MCMC' cbind2(x, y)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine two MCMC Objects — bind","text":"x, y MCMC object.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine two MCMC Objects — bind","text":"MCMC object.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bind.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine two MCMC Objects — bind","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine two MCMC Objects — bind","text":"","code":"## Events (eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)) #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  eve[1:1000, ] # Select the first 1000 iterations #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 1000 eve[, 1:2]    # Select the first 2 events #> <EventsMCMC> #> - Number of events: 2 #> - Number of MCMC samples: 30000  cbind2(eve[, 1:2], eve[, 3:4]) # Combine two MCMC objects #> <MCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000 sort(eve, decreasing = TRUE)   # Sort events in descending order #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  ## Phases (pha <- as_phases(mcmc_phases, start = c(1, 3), calendar = CE(), iteration = 1)) #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 30000  pha[1:1000, , ]          # Select the first 1000 iterations #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 1000 pha[, 1, , drop = FALSE] # Select the first phase #> <PhasesMCMC> #> - Number of phases: 1 #> - Number of MCMC samples: 30000"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Phase Time Range — boundaries","title":"Phase Time Range — boundaries","text":"Computes shortest interval satisfies \\(P(PhaseMin < IntervalInf < IntervalSup < PhaseMax | M) = level\\) phase.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phase Time Range — boundaries","text":"","code":"boundaries(x, y, ...)  # S4 method for class 'numeric,numeric' boundaries(x, y, level = 0.95)  # S4 method for class 'PhasesMCMC,missing' boundaries(x, level = 0.95)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phase Time Range — boundaries","text":"x, y numeric vector. y missing, x must PhasesMCMC object. ... Currently used. level length-one numeric vector giving confidence level.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/boundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phase Time Range — boundaries","text":"endpoints shortest time range (given level).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/boundaries.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Phase Time Range — boundaries","text":"boundaries(x = numeric, y = numeric): Returns length-two numeric vector (terminal times). boundaries(x = PhasesMCMC, y = missing): Returns TimeRange object.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/boundaries.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Phase Time Range — boundaries","text":". Philippe, M.-. Vibet, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/boundaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phase Time Range — boundaries","text":"","code":"## Coerce to events eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Compute min-max range by group pha <- phases(eve, groups = list(A = c(1, 3), B = c(2, 4)))  ## Compute phase ranges bou <- boundaries(pha) as.data.frame(bou) #>       start        end duration #> A -1046.091  -202.1504 844.9375 #> B -1972.281 -1078.0925 895.1862  ## Compute phase transition tra <- transition(pha) as.data.frame(tra) #>        start       end duration #> B-A -1409.47 -501.6004 908.8674  ## Compute phase hiatus hia <- hiatus(pha) as.data.frame(hia) #>         start       end duration #> B-A -1062.599 -1046.091  17.5059"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bury.html","id":null,"dir":"Reference","previous_headings":"","what":"Age-Depth Modeling — bury","title":"Age-Depth Modeling — bury","text":"Computes age-depth curve output MCMC algorithm known depth dated samples.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bury.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age-Depth Modeling — bury","text":"","code":"bury(object, depth, ...)  # S4 method for class 'EventsMCMC,numeric' bury(object, depth)  # S4 method for class 'AgeDepthModel' predict(object, newdata)  # S4 method for class 'AgeDepthModel,missing' plot(   x,   level = 0.95,   calendar = getOption(\"ArchaeoPhases.calendar\"),   main = NULL,   sub = NULL,   ann = graphics::par(\"ann\"),   axes = TRUE,   frame.plot = axes,   panel.first = NULL,   panel.last = NULL,   ... )"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bury.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age-Depth Modeling — bury","text":"object EventsMCMC object. depth numeric vector giving depths dated samples. ... graphical parameters may also passed arguments function, particularly, border, col, lwd, lty pch. newdata numeric vector giving depths ages predicted. missing, original data points used. x AgeDepthModel object. level length-one numeric vector giving confidence level. calendar aion::TimeScale object specifying target calendar (see calendar()). main character string giving main title plot. sub character string giving subtitle plot. ann logical scalar: default annotation (title x y axis labels) appear plot? axes logical scalar: axes drawn plot? frame.plot logical scalar: box drawn around plot? panel.first expression evaluated plot axes set plotting takes place. can useful drawing background grids. panel.last expression evaluated plotting taken place axes, title box added.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bury.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Age-Depth Modeling — bury","text":"bury() returns AgeDepthModel object. predict() returns EventsMCMC object. plot() called side-effects: results graphic displayed (invisibly returns x).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bury.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Age-Depth Modeling — bury","text":"assume exists function \\(f\\) relating age depth \\(age = f(depth)\\). estimate function using local regression (also called local polynomial regression): \\(f = loess(age ~ depth)\\). estimated function \\(f\\) depends unknown dates. However, posterior distribution age/date sequence, can evaluate posterior distribution age function desired depth.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bury.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Age-Depth Modeling — bury","text":"Jha, D. K., Sanyal, P. & Philippe, . (2020). Multi-Proxy Evidence Late Quaternary Climate Vegetational History North-Central India: Implication Paleolithic Neolithic Phases. Quaternary Science Reviews, 229: 106121. doi:10.1016/j.quascirev.2019.106121 . Ghosh, S., Sanyal, P., Roy, S., Bhushan, R., Sati, S. P., Philippe, . & Juyal, N. (2020). Early Holocene Indian Summer Monsoon Impact Vegetation Central Himalaya: Insight dD d13C Values Leaf Wax Lipid. Holocene, 30(7): 1063-1074. doi:10.1177/0959683620908639 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bury.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Age-Depth Modeling — bury","text":". Philippe","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/bury.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Age-Depth Modeling — bury","text":"","code":"## Coerce to MCMC eve <- matrix(rnorm(6000, (1:6)^2), ncol = 6, byrow = TRUE) eve <- as_events(eve, calendar = CE())  ## Compute an age-depth curve age <- bury(eve, depth = 1:6) plot(age)   ## Predict new values new <- predict(age, newdata = 1.5:5.5) summary(new) #>   mad mean sd min q1 median q3 max start end #> 1   3    3  2   1  2      3  3   5     1   4 #> 2   7    7  2   5  6      7  7   9     6   8 #> 3  13   13  2  11 12     13 13  15    12  14 #> 4  21   21  2  19 20     21 21  23    20  22 #> 5  31   31  2  28 30     31 31  33    29  32  plot(eve)  plot(new)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for an Original MCMC File — check","title":"Check for an Original MCMC File — check","text":"Checks whether file identical one used create object.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for an Original MCMC File — check","text":"","code":"is_original(object, ...)  # S4 method for class 'MCMC' is_original(object, file, download = FALSE)  # S4 method for class 'PhasesMCMC' is_original(object, file, download = FALSE)  # S4 method for class 'CumulativeEvents' is_original(object, file, download = FALSE)  # S4 method for class 'ActivityEvents' is_original(object, file, download = FALSE)  # S4 method for class 'OccurrenceEvents' is_original(object, file, download = FALSE)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for an Original MCMC File — check","text":"object object (typically MCMC object). ... Currently used. file Either path CSV file connection. download logical scalar: remote file downloaded hashed locally?","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for an Original MCMC File — check","text":"logical: TRUE files match, FALSE otherwise.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check for an Original MCMC File — check","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for an Original MCMC File — check","text":"","code":"if (FALSE) { # \\dontrun{ ## Import OxCal Output path_output <- system.file(\"oxcal/ksarakil/MCMC_Sample.csv\", package = \"ArchaeoData\") url_output <- paste0(\"https://raw.githubusercontent.com/ArchaeoStat/ArchaeoData/master/\",                      \"inst/oxcal/ksarakil/MCMC_Sample.csv\")  oxcal <- read_oxcal(path_output)  ## Check md5 sum is_original(oxcal, path_output) # Same as local file? TRUE is_original(oxcal, url_output, download = FALSE) # Same as remote file? FALSE is_original(oxcal, url_output, download = TRUE) # Same as remote file? TRUE } # }"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a Data Frame — data.frame","title":"Coerce to a Data Frame — data.frame","text":"Coerce Data Frame","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a Data Frame — data.frame","text":"","code":"# S4 method for class 'CumulativeEvents' as.data.frame(x, ..., calendar = getOption(\"ArchaeoPhases.calendar\"))  # S4 method for class 'ActivityEvents' as.data.frame(x, ..., calendar = getOption(\"ArchaeoPhases.calendar\"))  # S4 method for class 'OccurrenceEvents' as.data.frame(x, ..., calendar = getOption(\"ArchaeoPhases.calendar\"))  # S4 method for class 'TimeRange' as.data.frame(x, ..., calendar = getOption(\"ArchaeoPhases.calendar\"))"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a Data Frame — data.frame","text":"x object. ... parameters passed data.frame(). calendar aion::TimeScale object specifying target calendar (see calendar()).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to a Data Frame — data.frame","text":"data.frame extra time column giving (decimal) years time series sampled.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/data.frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce to a Data Frame — data.frame","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/duration.html","id":null,"dir":"Reference","previous_headings":"","what":"Phase Duration — duration","title":"Phase Duration — duration","text":"Phase Duration","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/duration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phase Duration — duration","text":"","code":"duration(x, y, ...)  # S4 method for class 'numeric,numeric' duration(x, y)  # S4 method for class 'PhasesMCMC,missing' duration(x)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/duration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phase Duration — duration","text":"x, y numeric vector. y missing, x must PhasesMCMC object. ... Currently used.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/duration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Phase Duration — duration","text":". Philippe, M.-. Vibet, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/duration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phase Duration — duration","text":"","code":"## Coerce to phases pha <- as_phases(mcmc_phases, start = c(1, 3), calendar = CE(), iteration = 1)  ## Compute phase duration dur <- duration(pha) summary(dur) #>    mad mean  sd min  q1 median  q3  max start end #> P1 278  253 138   1 151    249 345  880     1 487 #> P2 561  551 132   5 464    552 639 1157   297 806"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/elapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Elapsed Time Scale — elapse","title":"Elapsed Time Scale — elapse","text":"Elapsed Time Scale","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/elapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elapsed Time Scale — elapse","text":"","code":"elapse(object, ...)  # S4 method for class 'MCMC' elapse(object, origin = 1)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/elapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Elapsed Time Scale — elapse","text":"object object (typically MCMC object). ... Currently used. origin integer giving position column corresponding event elapsed time calculated.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/elapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Elapsed Time Scale — elapse","text":"Returns object class object elapsed object sort object new time scale.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/elapse.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Elapsed Time Scale — elapse","text":"year \\(0\\) BCE/CE scale.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/elapse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Elapsed Time Scale — elapse","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/elapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Elapsed Time Scale — elapse","text":"","code":"## Coerce to events eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)  ## Elapsed origin eve_elapse <- elapse(eve, origin = 4) plot(eve_elapse)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/hiatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Hiatus Between Two Dates — hiatus","title":"Hiatus Between Two Dates — hiatus","text":"Tests existence hiatus two parameters.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/hiatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hiatus Between Two Dates — hiatus","text":"","code":"hiatus(x, y, ...)  # S4 method for class 'numeric,numeric' hiatus(x, y, level = 0.95)  # S4 method for class 'EventsMCMC,missing' hiatus(x, level = 0.95)  # S4 method for class 'PhasesMCMC,missing' hiatus(x, level = 0.95)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/hiatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hiatus Between Two Dates — hiatus","text":"x, y numeric vector. y missing, x must PhasesMCMC EventsMCMC object. ... Currently used. level length-one numeric vector giving confidence level.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/hiatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hiatus Between Two Dates — hiatus","text":"endpoints hiatus successive events/phases (given level).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/hiatus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hiatus Between Two Dates — hiatus","text":"Finds gap exists two dates returns longest interval satisfies \\(P(x < HiatusInf < HiatusSup < y | M) = level\\) hiatus two successive phases longest interval satisfies \\(P(Phase1Max < IntervalInf < IntervalSup < Phase2Min | M) = level\\) (assumes phases temporal order constraint).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/hiatus.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Hiatus Between Two Dates — hiatus","text":"hiatus(x = numeric, y = numeric): Returns length-three numeric vector (terminal times hiatus duration, ). hiatus(x = EventsMCMC, y = missing): Returns TimeRange object. hiatus(x = PhasesMCMC, y = missing): Returns TimeRange object.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/hiatus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hiatus Between Two Dates — hiatus","text":". Philippe, M.-. Vibet, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/hiatus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hiatus Between Two Dates — hiatus","text":"","code":"## Coerce to MCMC eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Test for anteriority older(eve) #>        E1    E2     E3     E4 #> E1 0.0000 0e+00 0.4925 0.0000 #> E2 1.0000 0e+00 1.0000 0.9996 #> E3 0.5075 0e+00 0.0000 0.0000 #> E4 1.0000 4e-04 1.0000 0.0000  ## Test for hiatus hia <- hiatus(eve) as.data.frame(hia) #>           start        end  duration #> E2-E1 -1601.050 -1059.8011 542.24640 #> E4-E1 -1062.599 -1045.3355  18.26092 #> E2-E3 -1603.777  -803.1072 801.66934 #> E4-E3 -1067.124  -793.8029 274.31905 #> E2-E4 -1599.472 -1408.9400 191.53059"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate Between Two Dates — interpolate","title":"Interpolate Between Two Dates — interpolate","text":"Interpolate Two Dates","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate Between Two Dates — interpolate","text":"","code":"interpolate(x, y, ...)  # S4 method for class 'numeric,numeric' interpolate(x, y)  # S4 method for class 'EventsMCMC,missing' interpolate(x, e1 = 1, e2 = 2)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate Between Two Dates — interpolate","text":"x numeric vector giving output MCMC algorithm first parameter. y numeric vector giving output MCMC algorithm second parameter. ... Currently used. e1, e2 integer specifying.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interpolate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolate Between Two Dates — interpolate","text":"given output MCMC algorithm, function interpolates events \\(x\\) \\(y\\) (assuming \\(x < y\\)).","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interpolate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interpolate Between Two Dates — interpolate","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interpolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate Between Two Dates — interpolate","text":"","code":"## Coerce to events eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Interpolate between two events inter <- interpolate(eve, e1 = 2, e2 = 3) plot(inter, level = 0.95, interval = \"credible\")"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_credible.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Credible Interval — interval_credible","title":"Bayesian Credible Interval — interval_credible","text":"Computes shortest credible interval output MCMC algorithm single parameter.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_credible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Credible Interval — interval_credible","text":"","code":"interval_credible(x, ...)  # S4 method for class 'MCMC' interval_credible(   x,   level = 0.95,   calendar = getOption(\"ArchaeoPhases.calendar\") )"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_credible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Credible Interval — interval_credible","text":"x MCMC object containing output MCMC algorithm. ... Currently used. level length-one numeric vector giving confidence level. calendar aion::TimeScale object specifying target calendar (see calendar()).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_credible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Credible Interval — interval_credible","text":"Returns list numeric matrix.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_credible.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian Credible Interval — interval_credible","text":"\\((100 \\times level)\\) % credible interval interval keeps \\(N \\times (1 - level)\\) elements sample outside interval. \\((100 \\times level)\\) % credible interval shortest intervals. instance, 95% credible interval central portion posterior distribution contains 95% values.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_credible.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian Credible Interval — interval_credible","text":". Philippe, M.-. Vibet, T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_credible.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Credible Interval — interval_credible","text":"","code":"## Coerce to events eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Rata die interval_credible(eve, level = 0.95) # Credible interval #> $E1 #>         start      end    p #> [1,] -1045.21 -202.337 0.95 #>  #> $E2 #>          start      end    p #> [1,] -1979.809 -1613.59 0.95 #>  #> $E3 #>         start       end    p #> [1,] -809.057 -459.0902 0.95 #>  #> $E4 #>         start      end    p #> [1,] -1400.04 -1064.29 0.95 #>  interval_hdr(eve, level = 0.68) # HPD interval #> $E1 #>           start       end    p #> [1,] -1009.3041 -774.1172 0.35 #> [2,]  -490.0579 -257.9274 0.33 #>  #> $E2 #>          start       end    p #> [1,] -1891.749 -1690.389 0.68 #>  #> $E3 #>          start       end    p #> [1,] -757.2022 -604.5305 0.68 #>  #> $E4 #>          start       end    p #> [1,] -1311.728 -1149.417 0.68 #>   ## BP interval_credible(eve, level = 0.95, calendar = BP()) # Credible interval #> $E1 #>        start      end    p #> [1,] 2996.79 2153.663 0.95 #>  #> $E2 #>         start     end    p #> [1,] 3930.191 3564.41 0.95 #>  #> $E3 #>         start     end    p #> [1,] 2760.943 2410.91 0.95 #>  #> $E4 #>        start     end    p #> [1,] 3351.96 3015.71 0.95 #>  interval_hdr(eve, level = 0.95, calendar = BP()) # HPD interval #> $E1 #>         start      end    p #> [1,] 3012.773 2144.216 0.95 #>  #> $E2 #>         start      end    p #> [1,] 3931.124 3560.483 0.95 #>  #> $E3 #>         start      end    p #> [1,] 2756.947 2402.143 0.95 #>  #> $E4 #>         start      end    p #> [1,] 3357.589 3017.994 0.95 #>"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_hdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian HPD Regions — interval_hdr","title":"Bayesian HPD Regions — interval_hdr","text":"Bayesian HPD Regions","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_hdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian HPD Regions — interval_hdr","text":"","code":"interval_hdr(x, y, ...)  # S4 method for class 'MCMC,missing' interval_hdr(   x,   level = 0.95,   calendar = getOption(\"ArchaeoPhases.calendar\"),   ... )"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_hdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian HPD Regions — interval_hdr","text":"x MCMC object containing output MCMC algorithm. y Currently used. ... Extra arguments passed stats::density(). level length-one numeric vector giving confidence level. calendar aion::TimeScale object specifying target calendar (see calendar()).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_hdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian HPD Regions — interval_hdr","text":"Returns list numeric matrix.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_hdr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian HPD Regions — interval_hdr","text":"Hyndman, R. J. (1996). Computing graphing highest density regions. American Statistician, 50: 120-126. doi:10.2307/2684423 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_hdr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian HPD Regions — interval_hdr","text":". Philippe, M.-. Vibet, T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/interval_hdr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian HPD Regions — interval_hdr","text":"","code":"## Coerce to events eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Rata die interval_credible(eve, level = 0.95) # Credible interval #> $E1 #>         start      end    p #> [1,] -1045.21 -202.337 0.95 #>  #> $E2 #>          start      end    p #> [1,] -1979.809 -1613.59 0.95 #>  #> $E3 #>         start       end    p #> [1,] -809.057 -459.0902 0.95 #>  #> $E4 #>         start      end    p #> [1,] -1400.04 -1064.29 0.95 #>  interval_hdr(eve, level = 0.68) # HPD interval #> $E1 #>           start       end    p #> [1,] -1009.3041 -774.1172 0.35 #> [2,]  -490.0579 -257.9274 0.33 #>  #> $E2 #>          start       end    p #> [1,] -1891.749 -1690.389 0.68 #>  #> $E3 #>          start       end    p #> [1,] -757.2022 -604.5305 0.68 #>  #> $E4 #>          start       end    p #> [1,] -1311.728 -1149.417 0.68 #>   ## BP interval_credible(eve, level = 0.95, calendar = BP()) # Credible interval #> $E1 #>        start      end    p #> [1,] 2996.79 2153.663 0.95 #>  #> $E2 #>         start     end    p #> [1,] 3930.191 3564.41 0.95 #>  #> $E3 #>         start     end    p #> [1,] 2760.943 2410.91 0.95 #>  #> $E4 #>        start     end    p #> [1,] 3351.96 3015.71 0.95 #>  interval_hdr(eve, level = 0.95, calendar = BP()) # HPD interval #> $E1 #>         start      end    p #> [1,] 3012.773 2144.216 0.95 #>  #> $E2 #>         start      end    p #> [1,] 3931.124 3560.483 0.95 #>  #> $E3 #>         start      end    p #> [1,] 2756.947 2402.143 0.95 #>  #> $E4 #>         start      end    p #> [1,] 3357.589 3017.994 0.95 #>"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/mcmc_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Events — mcmc_events","title":"Events — mcmc_events","text":"data set containing information ages four dated events.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/mcmc_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Events — mcmc_events","text":"","code":"mcmc_events"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/mcmc_events.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Events — mcmc_events","text":"data.frame 30,000 rows 5 variables: iter Iteration MCMC algorithm. E1 Information event 1. E2 Information event 2. E3 Information event 3. E4 Information event 4.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/mcmc_phases.html","id":null,"dir":"Reference","previous_headings":"","what":"Phases — mcmc_phases","title":"Phases — mcmc_phases","text":"data set containing information start end dates two phases.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/mcmc_phases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phases — mcmc_phases","text":"","code":"mcmc_phases"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/mcmc_phases.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phases — mcmc_phases","text":"data.frame 30,000 rows 5 variables: iter Iteration MCMC algorithm. P2_alpha Start date Phase 2. P2_beta End date Phase 2. P1_alpha Start date Phase 1. P1_beta End date Phase 1.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/names.html","id":null,"dir":"Reference","previous_headings":"","what":"The Names of an Object — names","title":"The Names of an Object — names","text":"Get set names object.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Names of an Object — names","text":"","code":"# S4 method for class 'MCMC' names(x)  # S4 method for class 'MCMC' names(x) <- value  # S4 method for class 'PhasesMCMC' names(x)  # S4 method for class 'PhasesMCMC' names(x) <- value"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Names of an Object — names","text":"x object get set names. value possible value names x.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Names of an Object — names","text":"object sort x new names assigned.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Names of an Object — names","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/occurrence.html","id":null,"dir":"Reference","previous_headings":"","what":"Occurrence Plot — occurrence","title":"Occurrence Plot — occurrence","text":"statistical graphic designed archaeological study events specified kind occurred.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/occurrence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Occurrence Plot — occurrence","text":"","code":"occurrence(object, ...)  # S4 method for class 'EventsMCMC' occurrence(object, level = 0.95)  # S4 method for class 'OccurrenceEvents,missing' plot(   x,   calendar = getOption(\"ArchaeoPhases.calendar\"),   main = NULL,   sub = NULL,   ann = graphics::par(\"ann\"),   axes = TRUE,   frame.plot = axes,   panel.first = NULL,   panel.last = NULL,   ... )"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/occurrence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Occurrence Plot — occurrence","text":"object EventsMCMC object. ... graphical parameters may also passed arguments function, particularly, border, col, lwd, lty pch. level length-one numeric vector giving confidence level. x OccurrenceEvents object. calendar aion::TimeScale object specifying target calendar (see calendar()). main character string giving main title plot. sub character string giving subtitle plot. ann logical scalar: default annotation (title x y axis labels) appear plot? axes logical scalar: axes drawn plot? frame.plot logical scalar: box drawn around plot? panel.first expression evaluated plot axes set plotting takes place. can useful drawing background grids. panel.last expression evaluated plotting taken place axes, title box added.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/occurrence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Occurrence Plot — occurrence","text":"occurrence() returns OccurrenceEvents object. plot() called side-effects: results graphic displayed (invisibly returns x). OccurrenceEvents object.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/occurrence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Occurrence Plot — occurrence","text":"\\(k\\) events, can estimate calendar date \\(t\\) corresponding smallest date number events observed \\(t\\) equal \\(k\\). occurrence() estimates occurrences gives credible interval highest posterior density (HPD) region given level confidence.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/occurrence.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Occurrence Plot — occurrence","text":". Philippe, M.-. Vibet, T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/occurrence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Occurrence Plot — occurrence","text":"","code":"## Coerce to MCMC eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Occurrence plot occ <- occurrence(eve) plot(occ, panel.first = graphics::grid())"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/older.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Test for Anteriority/Posteriority — older","title":"Bayesian Test for Anteriority/Posteriority — older","text":"Bayesian test checking following assumption: \"event x older event y\".","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/older.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Test for Anteriority/Posteriority — older","text":"","code":"older(x, y, ...)  # S4 method for class 'numeric,numeric' older(x, y)  # S4 method for class 'EventsMCMC,missing' older(x, y)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/older.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Test for Anteriority/Posteriority — older","text":"x numeric vector giving output MCMC algorithm first parameter, EventsMCMC object. y numeric vector giving output MCMC algorithm second parameter. ... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/older.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian Test for Anteriority/Posteriority — older","text":"given output MCMC algorithm, function estimates posterior probability event \\(x < y\\) relative frequency event \"value event x less value event y\" simulated Markov chain.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/older.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Bayesian Test for Anteriority/Posteriority — older","text":"older(x = numeric, y = numeric): Returns length-one numeric vector (posterior probability assumption: \"event x older event y\"). older(x = EventsMCMC, y = missing): Returns numeric matrix posterior probabilities.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/older.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian Test for Anteriority/Posteriority — older","text":". Philippe, M.-. Vibet, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/older.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Test for Anteriority/Posteriority — older","text":"","code":"## Coerce to MCMC eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Test for anteriority older(eve) #>        E1    E2     E3     E4 #> E1 0.0000 0e+00 0.4925 0.0000 #> E2 1.0000 0e+00 1.0000 0.9996 #> E3 0.5075 0e+00 0.0000 0.0000 #> E4 1.0000 4e-04 1.0000 0.0000  ## Test for hiatus hia <- hiatus(eve) as.data.frame(hia) #>           start        end  duration #> E2-E1 -1601.050 -1059.8011 542.24640 #> E4-E1 -1062.599 -1045.3355  18.26092 #> E2-E3 -1603.777  -803.1072 801.66934 #> E4-E3 -1067.124  -793.8029 274.31905 #> E2-E4 -1599.472 -1408.9400 191.53059"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/phases.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Phases — phases","title":"Compute Phases — phases","text":"Constructs minimum maximum group events (phase).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/phases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Phases — phases","text":"","code":"phases(x, groups, ...)  # S4 method for class 'EventsMCMC,missing' phases(x)  # S4 method for class 'EventsMCMC,list' phases(x, groups)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/phases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Phases — phases","text":"x EventsMCMC. groups list (named) vector names indexes columns x (see phases()). ... Currently used.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/phases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Phases — phases","text":"PhasesMCMC object.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/phases.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute Phases — phases","text":"default value start end corresponds CSV file exported ChronoModel.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/phases.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute Phases — phases","text":". Philippe, M.-. Vibet, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/phases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Phases — phases","text":"","code":"## Coerce to phases (pha <- as_phases(mcmc_phases, start = c(1, 3), calendar = CE(), iteration = 1)) #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 30000 summary(pha, calendar = CE()) #> $P1 #>           mad mean  sd   min   q1 median   q3  max start  end #> start    -708 -773 148 -1349 -890   -749 -671 -207 -1059 -501 #> end      -690 -521 169 -1050 -670   -537 -384   -5  -776 -214 #> duration  278  253 138     1  151    249  345  880     1  487 #>  #> $P2 #>            mad  mean  sd   min    q1 median    q3   max start   end #> start    -1766 -1785 100 -2000 -1857  -1785 -1719 -1223 -1981 -1611 #> end      -1240 -1235  87 -1833 -1289  -1235 -1181  -719 -1404 -1067 #> duration   561   551 132     5   464    552   639  1157   297   806 #>   ## Plot phases plot(pha)  plot(pha, succession = \"hiatus\")  plot(pha, succession = \"transition\")   ## Compute phases from events (eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)) #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  ## Compute min-max range for all chains pha1 <- phases(eve) summary(pha1, calendar = CE()) #> $P1 #>            mad  mean  sd   min    q1 median    q3   max start   end #> start    -1766 -1785 100 -2000 -1857  -1785 -1719 -1223 -1981 -1611 #> end       -690  -521 169 -1050  -670   -537  -384    -5  -776  -214 #> duration  1167  1265 196   483  1116   1253  1411  1947   915  1637 #>   ## Compute min-max range by group pha2 <- phases(eve, groups = list(phase_1 = c(1, 3), phase_2 = c(2, 4))) summary(pha2, calendar = CE()) #> $phase_1 #>           mad mean  sd   min   q1 median   q3  max start  end #> start    -708 -773 148 -1349 -890   -749 -671 -207 -1059 -501 #> end      -690 -521 169 -1050 -670   -537 -384   -5  -776 -214 #> duration  278  253 138     1  151    249  345  880     1  487 #>  #> $phase_2 #>            mad  mean  sd   min    q1 median    q3   max start   end #> start    -1766 -1785 100 -2000 -1857  -1785 -1719 -1223 -1981 -1611 #> end      -1240 -1235  87 -1833 -1289  -1235 -1181  -719 -1404 -1067 #> duration   561   551 132     5   464    552   639  1157   297   806 #>    zz <- pha@.Data head(zz) #> , , start #>  #>             P1        P2 #> [1,] -319045.0 -625448.0 #> [2,] -273570.0 -629970.0 #> [3,] -335555.9 -604871.0 #> [4,] -319169.8 -609557.0 #> [5,] -323497.0 -706432.8 #> [6,] -355422.6 -677593.3 #>  #> , , end #>  #>             P1        P2 #> [1,] -267769.1 -399848.8 #> [2,] -270327.0 -435810.7 #> [3,] -231655.0 -431449.5 #> [4,] -255757.0 -448294.4 #> [5,] -300265.5 -478087.0 #> [6,] -263102.0 -444912.5 #>   head(zz[, 1, ]) #>          start       end #> [1,] -319045.0 -267769.1 #> [2,] -273570.0 -270327.0 #> [3,] -335555.9 -231655.0 #> [4,] -319169.8 -255757.0 #> [5,] -323497.0 -300265.5 #> [6,] -355422.6 -263102.0  head(pha) #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 6"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Events — plot_events","title":"Plot Events — plot_events","text":"Plots credible intervals HPD regions series events.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Events — plot_events","text":"","code":"# S4 method for class 'MCMC,missing' plot(   x,   calendar = getOption(\"ArchaeoPhases.calendar\"),   density = TRUE,   interval = NULL,   level = 0.95,   sort = TRUE,   decreasing = TRUE,   main = NULL,   sub = NULL,   ann = graphics::par(\"ann\"),   axes = TRUE,   frame.plot = FALSE,   panel.first = NULL,   panel.last = NULL,   col.density = \"grey\",   col.interval = \"#77AADD\",   ... )"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Events — plot_events","text":"x MCMC object. calendar aion::TimeScale object specifying target calendar (see calendar()). density logical scalar: estimated density plotted? interval character string specifying confidence interval drawn. must one \"credible\" (credible interval) \"hdr\" (highest posterior density interval). unambiguous substring can given. NULL (default) interval computed. level length-one numeric vector giving confidence level. sort logical scalar: data sorted? decreasing logical scalar: sort order decreasing? used sort TRUE. main character string giving main title plot. sub character string giving subtitle plot. ann logical scalar: default annotation (title x y axis labels) appear plot? axes logical scalar: axes drawn plot? frame.plot logical scalar: box drawn around plot? panel.first expression evaluated plot axes set plotting takes place. can useful drawing background grids. panel.last expression evaluated plotting taken place axes, title box added. col.density, col.interval specification plotting colors. ... Extra parameters passed stats::density().","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Events — plot_events","text":"plot() called side-effects: results graphic displayed (invisibly returns x).","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Events — plot_events","text":". Philippe, M.-. Vibet, T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Events — plot_events","text":"","code":"## Coerce to MCMC eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)  ## Summary summary(eve, calendar = CE()) #>      mad  mean  sd   min    q1 median    q3  max start   end #> E1  -900  -638 272 -1349  -889   -658  -386   -5 -1046  -202 #> E2 -1766 -1785 100 -2000 -1857  -1785 -1719 -971 -1981 -1611 #> E3  -702  -656  92 -1229  -717   -672  -611  -67  -803  -450 #> E4 -1241 -1236  87 -1864 -1289  -1235 -1181 -719 -1401 -1064 summary(eve, calendar = BP()) #>     mad mean   sd  min   q1 median   q3  max start  end #> E1 2850 2588 1680 3299 2839   2608 2338 1957  2998 2154 #> E2 3716 3737 1852 3950 3807   3735 3671 2923  3933 3561 #> E3 2652 2608 1860 3181 2667   2624 2561 2017  2753 2400 #> E4 3191 3186 1863 3814 3239   3187 3131 2669  3351 3016  ## Plot events plot(eve, calendar = CE(), interval = \"credible\", level = 0.68)  plot(eve, calendar = BP(), interval = \"hdr\", level = 0.68)  plot(eve[, 1], interval = \"hdr\")   ## Compute phases pha <- phases(eve, groups = list(B = c(2, 4), A = c(1, 3)))  ## Summary summary(pha, calendar = CE()) #> $B #>            mad  mean  sd   min    q1 median    q3   max start   end #> start    -1766 -1785 100 -2000 -1857  -1785 -1719 -1223 -1981 -1611 #> end      -1240 -1235  87 -1833 -1289  -1235 -1181  -719 -1404 -1067 #> duration   561   551 132     5   464    552   639  1157   297   806 #>  #> $A #>           mad mean  sd   min   q1 median   q3  max start  end #> start    -708 -773 148 -1349 -890   -749 -671 -207 -1059 -501 #> end      -690 -521 169 -1050 -670   -537 -384   -5  -776 -214 #> duration  278  253 138     1  151    249  345  880     1  487 #>  summary(pha, calendar = BP()) #> $B #>           mad mean   sd  min   q1 median   q3  max start  end #> start    3718 3737 1852 3950 3807   3735 3671 3173  3933 3561 #> end      3192 3187 1863 3783 3239   3187 3131 2669  3354 3019 #> duration 1391 1401 1820 1945 1488   1398 1311  793  1653 1146 #>  #> $A #>           mad mean   sd  min   q1 median   q3  max start  end #> start    2660 2723 1802 3299 2840   2701 2623 2157  3011 2453 #> end      2640 2473 1783 3000 2622   2487 2334 1957  2726 2166 #> duration 1674 1699 1814 1949 1801   1703 1607 1072  1949 1465 #>   ## Plot phases plot(pha, calendar = BP())  plot(pha, succession = \"hiatus\")  plot(pha, succession = \"transition\")"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_phases.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Phases — plot_phases","title":"Plot Phases — plot_phases","text":"Plots characteristics group events (phase).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_phases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Phases — plot_phases","text":"","code":"# S4 method for class 'PhasesMCMC,missing' plot(   x,   calendar = getOption(\"ArchaeoPhases.calendar\"),   density = TRUE,   range = TRUE,   succession = NULL,   level = 0.95,   sort = TRUE,   decreasing = TRUE,   legend = TRUE,   main = NULL,   sub = NULL,   ann = graphics::par(\"ann\"),   axes = TRUE,   frame.plot = FALSE,   panel.first = NULL,   panel.last = NULL,   col.density = \"grey\",   col.range = \"black\",   col.succession = c(\"#77AADD\", \"#EE8866\"),   ... )"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_phases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Phases — plot_phases","text":"x PhasesMCMC object. calendar aion::TimeScale object specifying target calendar (see calendar()). density logical scalar: estimated density plotted? range logical scalar: phase time range plotted (see boundaries())? succession character string specifying additional time range displayed. must one \"hiatus\" \"transition\". NULL (default), additional time ranges displayed. level length-one numeric vector giving confidence level. sort logical scalar: data sorted? decreasing logical scalar: sort order decreasing? used sort TRUE. legend logical scalar: legend displayed? main character string giving main title plot. sub character string giving subtitle plot. ann logical scalar: default annotation (title x y axis labels) appear plot? axes logical scalar: axes drawn plot? frame.plot logical scalar: box drawn around plot? panel.first expression evaluated plot axes set plotting takes place. can useful drawing background grids. panel.last expression evaluated plotting taken place axes, title box added. col.density, col.range, col.succession specification plotting colors. ... Extra parameters passed stats::density().","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_phases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Phases — plot_phases","text":"plot() called side-effects: results graphic displayed (invisibly returns x).","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_phases.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Phases — plot_phases","text":". Philippe, M.-. Vibet, T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/plot_phases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Phases — plot_phases","text":"","code":"## Coerce to MCMC eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)  ## Summary summary(eve, calendar = CE()) #>      mad  mean  sd   min    q1 median    q3  max start   end #> E1  -900  -638 272 -1349  -889   -658  -386   -5 -1046  -202 #> E2 -1766 -1785 100 -2000 -1857  -1785 -1719 -971 -1981 -1611 #> E3  -702  -656  92 -1229  -717   -672  -611  -67  -803  -450 #> E4 -1241 -1236  87 -1864 -1289  -1235 -1181 -719 -1401 -1064 summary(eve, calendar = BP()) #>     mad mean   sd  min   q1 median   q3  max start  end #> E1 2850 2588 1680 3299 2839   2608 2338 1957  2998 2154 #> E2 3716 3737 1852 3950 3807   3735 3671 2923  3933 3561 #> E3 2652 2608 1860 3181 2667   2624 2561 2017  2753 2400 #> E4 3191 3186 1863 3814 3239   3187 3131 2669  3351 3016  ## Plot events plot(eve, calendar = CE(), interval = \"credible\", level = 0.68)  plot(eve, calendar = BP(), interval = \"hdr\", level = 0.68)  plot(eve[, 1], interval = \"hdr\")   ## Compute phases pha <- phases(eve, groups = list(B = c(2, 4), A = c(1, 3)))  ## Summary summary(pha, calendar = CE()) #> $B #>            mad  mean  sd   min    q1 median    q3   max start   end #> start    -1766 -1785 100 -2000 -1857  -1785 -1719 -1223 -1981 -1611 #> end      -1240 -1235  87 -1833 -1289  -1235 -1181  -719 -1404 -1067 #> duration   561   551 132     5   464    552   639  1157   297   806 #>  #> $A #>           mad mean  sd   min   q1 median   q3  max start  end #> start    -708 -773 148 -1349 -890   -749 -671 -207 -1059 -501 #> end      -690 -521 169 -1050 -670   -537 -384   -5  -776 -214 #> duration  278  253 138     1  151    249  345  880     1  487 #>  summary(pha, calendar = BP()) #> $B #>           mad mean   sd  min   q1 median   q3  max start  end #> start    3718 3737 1852 3950 3807   3735 3671 3173  3933 3561 #> end      3192 3187 1863 3783 3239   3187 3131 2669  3354 3019 #> duration 1391 1401 1820 1945 1488   1398 1311  793  1653 1146 #>  #> $A #>           mad mean   sd  min   q1 median   q3  max start  end #> start    2660 2723 1802 3299 2840   2701 2623 2157  3011 2453 #> end      2640 2473 1783 3000 2622   2487 2334 1957  2726 2166 #> duration 1674 1699 1814 1949 1801   1703 1607 1072  1949 1465 #>   ## Plot phases plot(pha, calendar = BP())  plot(pha, succession = \"hiatus\")  plot(pha, succession = \"transition\")"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_bcal.html","id":null,"dir":"Reference","previous_headings":"","what":"Read BCal Output — read_bcal","title":"Read BCal Output — read_bcal","text":"Reads MCMC output.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_bcal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read BCal Output — read_bcal","text":"","code":"read_bcal(file, ...)  # S4 method for class 'character' read_bcal(file, bin_width = 1, calendar = BP())"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_bcal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read BCal Output — read_bcal","text":"file character string giving name CSV file data read . ... Currently used. bin_width bin width specified BCal calibration. Defaults BCal default 1. calendar aion::TimeScale object specifying calendar (see calendar()). BP() unless change default settings 'BCal'.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_bcal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read BCal Output — read_bcal","text":"EventsMCMC object.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_bcal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read BCal Output — read_bcal","text":"Buck C. E., Christen J. . & James G. N. (1999). BCal: -line Bayesian radiocarbon calibration tool. Internet Archaeology, 7. doi:10.11141/ia.7.1 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_bcal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read BCal Output — read_bcal","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_bcal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read BCal Output — read_bcal","text":"","code":"if (requireNamespace(\"ArchaeoData\", quietly = TRUE)) {   ## Import BCal Output   path_output <- system.file(\"bcal/fishpond.csv\", package = \"ArchaeoData\")   (bcal <- read_bcal(path_output)) } #> <EventsMCMC> #> - Number of events: 10 #> - Number of MCMC samples: 55964"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_chronomodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ChronoModel Output — read_chronomodel","title":"Read ChronoModel Output — read_chronomodel","text":"Reads MCMC output.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_chronomodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ChronoModel Output — read_chronomodel","text":"","code":"read_chronomodel_events(file, ...)  read_chronomodel_phases(file, ...)  # S4 method for class 'character' read_chronomodel_events(file, calendar = CE(), sep = \",\", dec = \".\")  # S4 method for class 'character' read_chronomodel_phases(file, calendar = CE(), sep = \",\", dec = \".\")"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_chronomodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ChronoModel Output — read_chronomodel","text":"file character string giving name CSV file data read . ... Currently used. calendar aion::TimeScale object specifying calendar (see calendar()). CE() unless change default settings 'ChronoModel'. sep character string specifying field separator character (see utils::read.table()). dec character string specifying character used file decimal points (see utils::read.table()).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_chronomodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ChronoModel Output — read_chronomodel","text":"EventsMCMC PhasesMCMC object.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_chronomodel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read ChronoModel Output — read_chronomodel","text":"Lanos, Ph., Philippe, . & Dufresne, Ph. (2015). Chronomodel: Chronological Modeling Archaeological Data using Bayesian Statistics. URL: https://chronomodel.com/.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_chronomodel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read ChronoModel Output — read_chronomodel","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_chronomodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read ChronoModel Output — read_chronomodel","text":"","code":"if (requireNamespace(\"ArchaeoData\", quietly = TRUE)) {   ## Import ChronoModel Output   path <- \"chronomodel/ksarakil\"    ## Events   path_events <- system.file(path, \"Chain_all_Events.csv\", package = \"ArchaeoData\")   (chrono_events <- read_chronomodel_events(path_events))    ## Phases   path_phases <- system.file(path, \"Chain_all_Phases.csv\", package = \"ArchaeoData\")   (chrono_phases <- read_chronomodel_phases(path_phases)) } #> <PhasesMCMC> #> - Number of phases: 4 #> - Number of MCMC samples: 30000"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_oxcal.html","id":null,"dir":"Reference","previous_headings":"","what":"Read OxCal Output — read_oxcal","title":"Read OxCal Output — read_oxcal","text":"Reads MCMC output.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_oxcal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read OxCal Output — read_oxcal","text":"","code":"read_oxcal(file, ...)  # S4 method for class 'character' read_oxcal(file, calendar = CE())"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_oxcal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read OxCal Output — read_oxcal","text":"file character string giving name CSV file data read . ... Currently used. calendar aion::TimeScale object specifying calendar (see calendar()). CE() unless change default settings 'OxCal'.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_oxcal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read OxCal Output — read_oxcal","text":"EventsMCMC object.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_oxcal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read OxCal Output — read_oxcal","text":"Bronk Ramsey, C. (2009). Bayesian Analysis Radiocarbon Dates. Radiocarbon, 51(1), 337-360. doi:10.1017/S0033822200033865 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_oxcal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read OxCal Output — read_oxcal","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/read_oxcal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read OxCal Output — read_oxcal","text":"","code":"if (requireNamespace(\"ArchaeoData\", quietly = TRUE)) {   ## Import OxCal Output   path <- \"oxcal/ksarakil/\"    path_output <- system.file(path, \"MCMC_Sample.csv\", package = \"ArchaeoData\")   (oxcal <- read_oxcal(path_output)) } #> <EventsMCMC> #> - Number of events: 26 #> - Number of MCMC samples: 1000"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. aion AD, BC, BCE, BP, CE, b2k, calendar, start, start, time, year_axis","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity — sensitivity","title":"Sensitivity — sensitivity","text":"Calculates ranges summary statistics output two runs MCMC algorithm.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity — sensitivity","text":"","code":"sensitivity(...)  # S4 method for class 'EventsMCMC' sensitivity(..., positions = NULL, level = 0.95)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity — sensitivity","text":"... EventsMCMC object. positions numeric vector specifying positions columns corresponding MCMC chains interest, character vector column names. level length-one numeric vector giving confidence level.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity — sensitivity","text":"data.frame.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sensitivity — sensitivity","text":"function useful estimating sensitivity calibration results different model parameters.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sensitivity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sensitivity — sensitivity","text":"T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sensitivity — sensitivity","text":"","code":"## Coerce to MCMC eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)  ## Returns 0's sensitivity(eve, eve) #>    mad mean sd min q1 median q3 max start end #> E1   0    0  0   0  0      0  0   0     0   0 #> E2   0    0  0   0  0      0  0   0     0   0 #> E3   0    0  0   0  0      0  0   0     0   0 #> E4   0    0  0   0  0      0  0   0     0   0"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort an MCMC Object — sort","title":"Sort an MCMC Object — sort","text":"Sort (order) object ascending descending temporal order.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort an MCMC Object — sort","text":"","code":"# S4 method for class 'MCMC' sort(x, decreasing = FALSE)  # S4 method for class 'PhasesMCMC' sort(x, decreasing = FALSE)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort an MCMC Object — sort","text":"x MCMC object. decreasing logical scalar: sort order decreasing?","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort an MCMC Object — sort","text":"object sort x.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sort an MCMC Object — sort","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort an MCMC Object — sort","text":"","code":"## Events (eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)) #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  eve[1:1000, ] # Select the first 1000 iterations #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 1000 eve[, 1:2]    # Select the first 2 events #> <EventsMCMC> #> - Number of events: 2 #> - Number of MCMC samples: 30000  cbind2(eve[, 1:2], eve[, 3:4]) # Combine two MCMC objects #> <MCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000 sort(eve, decreasing = TRUE)   # Sort events in descending order #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  ## Phases (pha <- as_phases(mcmc_phases, start = c(1, 3), calendar = CE(), iteration = 1)) #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 30000  pha[1:1000, , ]          # Select the first 1000 iterations #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 1000 pha[, 1, , drop = FALSE] # Select the first phase #> <PhasesMCMC> #> - Number of phases: 1 #> - Number of MCMC samples: 30000"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordering Permutation of an MCMC Object — sort.list","title":"Ordering Permutation of an MCMC Object — sort.list","text":"Returns permutation rearranges object ascending descending temporal order.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordering Permutation of an MCMC Object — sort.list","text":"","code":"# S4 method for class 'MCMC' sort.list(x, decreasing = FALSE)  # S4 method for class 'PhasesMCMC' sort.list(x, decreasing = FALSE)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordering Permutation of an MCMC Object — sort.list","text":"x MCMC object. decreasing logical scalar: sort order decreasing?","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordering Permutation of an MCMC Object — sort.list","text":"integer vector.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ordering Permutation of an MCMC Object — sort.list","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/sort.list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordering Permutation of an MCMC Object — sort.list","text":"","code":"## Events (eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)) #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  eve[1:1000, ] # Select the first 1000 iterations #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 1000 eve[, 1:2]    # Select the first 2 events #> <EventsMCMC> #> - Number of events: 2 #> - Number of MCMC samples: 30000  cbind2(eve[, 1:2], eve[, 3:4]) # Combine two MCMC objects #> <MCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000 sort(eve, decreasing = TRUE)   # Sort events in descending order #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  ## Phases (pha <- as_phases(mcmc_phases, start = c(1, 3), calendar = CE(), iteration = 1)) #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 30000  pha[1:1000, , ]          # Select the first 1000 iterations #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 1000 pha[, 1, , drop = FALSE] # Select the first phase #> <PhasesMCMC> #> - Number of phases: 1 #> - Number of MCMC samples: 30000"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or Replace Parts of an Object — subset","title":"Extract or Replace Parts of an Object — subset","text":"Operators acting objects extract replace parts.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or Replace Parts of an Object — subset","text":"","code":"# S4 method for class 'MCMC' x[i, j, ..., drop = FALSE]  # S4 method for class 'PhasesMCMC' x[i, j, k, drop = FALSE]"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or Replace Parts of an Object — subset","text":"x object extract element(s) replace element(s). , j, k Indices specifying elements extract replace. ... Currently used. drop logical scalar: result coerced lowest possible dimension? works extracting elements, replacement.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract or Replace Parts of an Object — subset","text":"subsetted object.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/subset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract or Replace Parts of an Object — subset","text":"N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract or Replace Parts of an Object — subset","text":"","code":"## Events (eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)) #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  eve[1:1000, ] # Select the first 1000 iterations #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 1000 eve[, 1:2]    # Select the first 2 events #> <EventsMCMC> #> - Number of events: 2 #> - Number of MCMC samples: 30000  cbind2(eve[, 1:2], eve[, 3:4]) # Combine two MCMC objects #> <MCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000 sort(eve, decreasing = TRUE)   # Sort events in descending order #> <EventsMCMC> #> - Number of events: 4 #> - Number of MCMC samples: 30000  ## Phases (pha <- as_phases(mcmc_phases, start = c(1, 3), calendar = CE(), iteration = 1)) #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 30000  pha[1:1000, , ]          # Select the first 1000 iterations #> <PhasesMCMC> #> - Number of phases: 2 #> - Number of MCMC samples: 1000 pha[, 1, , drop = FALSE] # Select the first phase #> <PhasesMCMC> #> - Number of phases: 1 #> - Number of MCMC samples: 30000"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal Summary Statistics for Multiple MCMC Chains — summary","title":"Marginal Summary Statistics for Multiple MCMC Chains — summary","text":"Calculates summary statistics output MCMC algorithm multiple parameters. Results given calendar years (BC/AD).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal Summary Statistics for Multiple MCMC Chains — summary","text":"","code":"# S4 method for class 'MCMC' summary(object, level = 0.95, calendar = getOption(\"ArchaeoPhases.calendar\"))  # S4 method for class 'PhasesMCMC' summary(object, level = 0.95, calendar = getOption(\"ArchaeoPhases.calendar\"))"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal Summary Statistics for Multiple MCMC Chains — summary","text":"object MCMC PhasesMCMC object. level length-one numeric vector giving confidence level. calendar aion::TimeScale object specifying target calendar (see calendar()).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal Summary Statistics for Multiple MCMC Chains — summary","text":"data.frame rows correspond chains interest columns following statistics: mean mean MCMC chain. sd standard deviation MCMC chain. min Minimum value MCMC chain. q1 First quantile MCMC chain. median Median MCMC chain. q3 Third quantile MCMC chain. max Maximum value MCMC chain. lower Lower boundary credible interval MCMC chain level. upper Upper boundary credible interval MCMC chain level.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Marginal Summary Statistics for Multiple MCMC Chains — summary","text":". Philippe, M.-. Vibet, T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal Summary Statistics for Multiple MCMC Chains — summary","text":"","code":"## Coerce to MCMC eve <- as_events(mcmc_events, calendar = CE(), iteration = 1)  ## Summary summary(eve, calendar = CE()) #>      mad  mean  sd   min    q1 median    q3  max start   end #> E1  -900  -638 272 -1349  -889   -658  -386   -5 -1046  -202 #> E2 -1766 -1785 100 -2000 -1857  -1785 -1719 -971 -1981 -1611 #> E3  -702  -656  92 -1229  -717   -672  -611  -67  -803  -450 #> E4 -1241 -1236  87 -1864 -1289  -1235 -1181 -719 -1401 -1064 summary(eve, calendar = BP()) #>     mad mean   sd  min   q1 median   q3  max start  end #> E1 2850 2588 1680 3299 2839   2608 2338 1957  2998 2154 #> E2 3716 3737 1852 3950 3807   3735 3671 2923  3933 3561 #> E3 2652 2608 1860 3181 2667   2624 2561 2017  2753 2400 #> E4 3191 3186 1863 3814 3239   3187 3131 2669  3351 3016  ## Plot events plot(eve, calendar = CE(), interval = \"credible\", level = 0.68)  plot(eve, calendar = BP(), interval = \"hdr\", level = 0.68)  plot(eve[, 1], interval = \"hdr\")   ## Compute phases pha <- phases(eve, groups = list(B = c(2, 4), A = c(1, 3)))  ## Summary summary(pha, calendar = CE()) #> $B #>            mad  mean  sd   min    q1 median    q3   max start   end #> start    -1766 -1785 100 -2000 -1857  -1785 -1719 -1223 -1981 -1611 #> end      -1240 -1235  87 -1833 -1289  -1235 -1181  -719 -1404 -1067 #> duration   561   551 132     5   464    552   639  1157   297   806 #>  #> $A #>           mad mean  sd   min   q1 median   q3  max start  end #> start    -708 -773 148 -1349 -890   -749 -671 -207 -1059 -501 #> end      -690 -521 169 -1050 -670   -537 -384   -5  -776 -214 #> duration  278  253 138     1  151    249  345  880     1  487 #>  summary(pha, calendar = BP()) #> $B #>           mad mean   sd  min   q1 median   q3  max start  end #> start    3718 3737 1852 3950 3807   3735 3671 3173  3933 3561 #> end      3192 3187 1863 3783 3239   3187 3131 2669  3354 3019 #> duration 1391 1401 1820 1945 1488   1398 1311  793  1653 1146 #>  #> $A #>           mad mean   sd  min   q1 median   q3  max start  end #> start    2660 2723 1802 3299 2840   2701 2623 2157  3011 2453 #> end      2640 2473 1783 3000 2622   2487 2334 1957  2726 2166 #> duration 1674 1699 1814 1949 1801   1703 1607 1072  1949 1465 #>   ## Plot phases plot(pha, calendar = BP())  plot(pha, succession = \"hiatus\")  plot(pha, succession = \"transition\")"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/tempo.html","id":null,"dir":"Reference","previous_headings":"","what":"Tempo Plot — tempo","title":"Tempo Plot — tempo","text":"statistical graphic designed archaeological study rhythms long term embodies theory archaeological evidence occurrence events.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/tempo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tempo Plot — tempo","text":"","code":"tempo(object, ...)  # S4 method for class 'CumulativeEvents,missing' plot(   x,   calendar = getOption(\"ArchaeoPhases.calendar\"),   interval = c(\"credible\", \"gauss\"),   col.tempo = \"#004488\",   col.interval = \"grey\",   main = NULL,   sub = NULL,   ann = graphics::par(\"ann\"),   axes = TRUE,   frame.plot = axes,   panel.first = NULL,   panel.last = NULL,   ... )  # S4 method for class 'EventsMCMC' tempo(   object,   level = 0.95,   count = FALSE,   credible = TRUE,   gauss = TRUE,   from = min(object),   to = max(object),   grid = getOption(\"ArchaeoPhases.grid\") )"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/tempo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tempo Plot — tempo","text":"object EventsMCMC object. ... graphical parameters may also passed arguments function. x CumulativeEvents object EventsMCMC object. calendar aion::TimeScale object specifying target calendar (see calendar()). interval character string specifying confidence interval drawn. must one \"credible\" (credible interval) \"gauss\" (Gaussian approximation credible interval). unambiguous substring can given. col.tempo, col.interval specification plotting colors. main character string giving main title plot. sub character string giving subtitle plot. ann logical scalar: default annotation (title x y axis labels) appear plot? axes logical scalar: axes drawn plot? frame.plot logical scalar: box drawn around plot? panel.first expression evaluated plot axes set plotting takes place. can useful drawing background grids. panel.last expression evaluated plotting taken place axes, title box added. level length-one numeric vector giving confidence level. count logical scalar: counting process number probability (default)? credible logical scalar: credible interval computed/displayed? gauss logical scalar: Gaussian approximation credible interval computed/displayed? length-one numeric vector giving earliest date estimate (years). length-one numeric vector giving latest date estimate (years). grid length-one numeric vector specifying number equally spaced points temporal grid.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/tempo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tempo Plot — tempo","text":"tempo() returns CumulativeEvents object. plot() called side-effects: results graphic displayed (invisibly returns x).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/tempo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tempo Plot — tempo","text":"tempo plot one way measure change time: estimates cumulative occurrence archaeological events Bayesian calibration. tempo plot yields graphic slope plot directly reflects pace change: period rapid change yields steep slope period slow change yields gentle slope. change, plot horizontal. change instantaneous, plot vertical.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/tempo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tempo Plot — tempo","text":"Dye, T. S. (2016). Long-term rhythms development Hawaiian social stratification. Journal Archaeological Science, 71: 1-9. doi:10.1016/j.jas.2016.05.006 .","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/tempo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tempo Plot — tempo","text":". Philippe, M.-. Vibet, T. S. Dye, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/tempo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tempo Plot — tempo","text":"","code":"## Coerce to MCMC eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Tempo plot tmp <- tempo(eve) plot(tmp)  plot(tmp, interval = \"credible\", panel.first = grid())  plot(tmp, interval = \"gauss\", panel.first = grid())   ## Activity plot act <- activity(tmp) plot(act, panel.first = grid())"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/transition.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition Range Between Successive Phases — transition","title":"Transition Range Between Successive Phases — transition","text":"Estimates transition endpoints two phases.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/transition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition Range Between Successive Phases — transition","text":"","code":"transition(x, y, ...)  # S4 method for class 'numeric,numeric' transition(x, y, level = 0.95)  # S4 method for class 'PhasesMCMC,missing' transition(x, level = 0.95)"},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/transition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition Range Between Successive Phases — transition","text":"x, y numeric vector. y missing, x must PhasesMCMC object. ... Currently used. level length-one numeric vector giving confidence level.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/transition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition Range Between Successive Phases — transition","text":"endpoints transition interval pair successive phases (given level).","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/transition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transition Range Between Successive Phases — transition","text":"transition shortest interval satisfies \\(P(IntervalInf < Phase1Max < Phase2Min < IntervalSup | M) = level\\). assumes phases temporal order constraint.","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/transition.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Transition Range Between Successive Phases — transition","text":"transition(x = numeric, y = numeric): Returns length-two numeric vector (terminal times transition interval). transition(x = PhasesMCMC, y = missing): Returns TimeRange object.","code":""},{"path":[]},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/transition.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transition Range Between Successive Phases — transition","text":". Philippe, M.-. Vibet, N. Frerebeau","code":""},{"path":"https://ArchaeoStat.github.io/ArchaeoPhases/dev/reference/transition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition Range Between Successive Phases — transition","text":"","code":"## Coerce to events eve <- as_events(mcmc_events, calendar = CE(), iteration = 1) eve <- eve[1:10000, ]  ## Compute min-max range by group pha <- phases(eve, groups = list(A = c(1, 3), B = c(2, 4)))  ## Compute phase ranges bou <- boundaries(pha) as.data.frame(bou) #>       start        end duration #> A -1046.091  -202.1504 844.9375 #> B -1972.281 -1078.0925 895.1862  ## Compute phase transition tra <- transition(pha) as.data.frame(tra) #>        start       end duration #> B-A -1409.47 -501.6004 908.8674  ## Compute phase hiatus hia <- hiatus(pha) as.data.frame(hia) #>         start       end duration #> B-A -1062.599 -1046.091  17.5059"}]
